"use strict";

var _fusionReact = _interopRequireDefault(require("fusion-react"));
var _fs = _interopRequireDefault(require("fs"));
var _path = _interopRequireDefault(require("path"));
var _react = _interopRequireDefault(require("react"));
var _fusionTestUtils = require("fusion-test-utils");
var _reactHelmetAsync = require("react-helmet-async");
var _index = _interopRequireDefault(require("../index"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/* eslint-disable react/no-unescaped-entities */

const name = true ? 'Server' : 'Client';
test(`${name} side render`, async () => {
  const TestA = () => {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactHelmetAsync.Helmet, {
        defaultTitle: "My Default Title",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("html", {
          lang: "en",
          amp: true
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("body", {
          className: "root"
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("title", {
          itemProp: "name",
          lang: "en",
          children: ["My Title's ", '</title>']
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("base", {
          target: "_blank",
          href: "http://mysite.com/"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("meta", {
          name: "description",
          content: "Helmet application"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("meta", {
          property: "og:type",
          content: "article"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("link", {
          rel: "canonical",
          href: "http://mysite.com/example"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("link", {
          rel: "apple-touch-icon",
          href: "http://mysite.com/img/apple-touch-icon-57x57.png"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("script", {
          src: "http://include.com/pathtojs.js",
          type: "text/javascript"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("script", {
          type: "application/ld+json",
          children: `
        {
            "@context": "http://schema.org"
        }
    `
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("noscript", {
          children: `
        <link rel="stylesheet" type="text/css" href="foo.css" />
    `
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("style", {
          type: "text/css",
          children: `
        body {
            background-color: blue;
        }

        p {
            font-size: 12px;
        }
    `
        })]
      })
    });
  };
  const Root = /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(TestA, {})
  });
  let app;
  let root;
  if (false) {
    root = document.createElement('div');
    root.setAttribute('id', 'root2');
    if (document.body) {
      document.body.appendChild(root);
    }
    app = new _fusionReact.default(Root, el => render(el, root));
  } else {
    app = new _fusionReact.default(Root);
  }
  app.register(_index.default);
  app.middleware((ctx, next) => {
    ctx.nonce = 'test-nonce';
    return next();
  });
  const sim = (0, _fusionTestUtils.getSimulator)(app);
  const ctx = await sim.render('/');
  if (true) {
    const fixtureFile = _path.default.resolve(__dirname + '/../__fixtures__/ssr1.html');
    // Uncomment to regenerate fixture
    // fs.writeFileSync(fixtureFile, ctx.body);
    expect(ctx.body).toBe(_fs.default.readFileSync(fixtureFile).toString());
  } else if (false) {
    // need to wait until next tick for dom changes
    await new Promise(resolve => setTimeout(resolve, 100));
    expect(document.title).toBe("My Title's </title>");
    const baseEl = document.querySelector('base');
    if (!baseEl) {
      throw new Error('Could not find base element');
    }
    expect(baseEl.getAttribute('href')).toBe('http://mysite.com/');
    const metaDescription = document.querySelector('meta[name="description"]');
    if (!metaDescription) {
      throw new Error('Could not find meta description');
    }
    expect(metaDescription.getAttribute('content')).toBe('Helmet application');
    if (document.body && root instanceof HTMLElement) {
      document.body.removeChild(root);
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,