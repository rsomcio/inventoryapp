/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import type { FusionPlugin } from 'fusion-core';
import type { Fetch } from 'fusion-tokens';
import Emitter from './emitter';
import type { IEmitter, UniversalEventsPluginDepsType as DepsType, BatchStorage } from './types';
declare global {
    interface Window {
        __ROUTE_PREFIX__?: string;
    }
}
export declare class UniversalEmitter extends Emitter {
    flush: any;
    fetch: Fetch;
    interval: any;
    storage: BatchStorage;
    limit: number;
    isFlushInProgress: boolean;
    hasFlushBeenScheduled: boolean;
    constructor(fetch: Fetch, storage: BatchStorage, interval?: number, limit?: number);
    setFrequency(frequency: number): void;
    emit(type: string, payload: unknown): void;
    from(): UniversalEmitter;
    flushBeforeTerminated: () => Promise<void>;
    flushInternal(): Promise<void>;
    teardown(): void;
    startFlush(): boolean;
    finishFlush(): void;
}
declare const _default: FusionPlugin<DepsType, IEmitter>;
export default _default;
//# sourceMappingURL=browser.d.ts.map