/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import type { Context } from 'fusion-core';
import type { IEmitter } from './types';
export default class UniversalEmitter implements IEmitter {
    handlers: any;
    mappers: any;
    constructor();
    map(...args: any): any;
    on(...args: any): any;
    off(...args: any): any;
    mapEvent(type: string, payload: unknown, ctx?: Context): unknown;
    handleEvent(type: string, payload: unknown, ctx?: Context): void;
    from(ctx: Context): IEmitter;
    emit(type: string, payload: unknown, ctx?: Context): void;
    setFrequency(frequency: number): void;
    teardown(): void;
    flush(): void;
}
//# sourceMappingURL=emitter.d.ts.map