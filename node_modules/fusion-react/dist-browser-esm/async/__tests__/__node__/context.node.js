function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
import * as React from 'react';
import { renderToString } from 'react-dom/server';
import Provider from '../../prepare-provider';
import { prepare } from '../../index.js';
test('Handling context', async () => {
  class Child extends React.Component {
    constructor(props) {
      super(props);
    }

    render() {
      return React.createElement("h1", null, this.context.field ? 'Yes' : 'No');
    }

  }

  _defineProperty(Child, "contextTypes", {
    field: () => {}
  });

  class Parent extends React.Component {
    getChildContext() {
      return {
        field: true
      };
    }

    render() {
      return React.createElement(Child, null);
    }

  }

  _defineProperty(Parent, "childContextTypes", {
    field: () => {}
  });

  const ToTest = () => {
    return React.createElement(Parent, null, React.createElement(Child, null));
  };

  const app = React.createElement(Provider, null, React.createElement(ToTest, null));
  expect(/Yes/.test(renderToString(app))).toBeTruthy();
  await prepare(app);
  expect(/Yes/.test(renderToString(app))).toBeTruthy();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRleHQubm9kZS5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlbmRlclRvU3RyaW5nIiwiUHJvdmlkZXIiLCJwcmVwYXJlIiwidGVzdCIsIkNoaWxkIiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInJlbmRlciIsImNvbnRleHQiLCJmaWVsZCIsIlBhcmVudCIsImdldENoaWxkQ29udGV4dCIsIlRvVGVzdCIsImFwcCIsImV4cGVjdCIsInRvQmVUcnV0aHkiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7QUFRQSxPQUFPLEtBQUtBLEtBQVosTUFBdUIsT0FBdkI7QUFDQSxTQUFRQyxjQUFSLFFBQTZCLGtCQUE3QjtBQUNBLE9BQU9DLFFBQVAsTUFBcUIsd0JBQXJCO0FBQ0EsU0FBUUMsT0FBUixRQUFzQixnQkFBdEI7QUFFQUMsSUFBSSxDQUFDLGtCQUFELEVBQXFCLFlBQVk7QUFDbkMsUUFBTUMsS0FBTixTQUFvQkwsS0FBSyxDQUFDTSxTQUExQixDQUE4QztBQUs1Q0MsSUFBQUEsV0FBVyxDQUFDQyxLQUFELEVBQVc7QUFDcEIsWUFBTUEsS0FBTjtBQUNEOztBQUVEQyxJQUFBQSxNQUFNLEdBQUc7QUFDUCxhQUFPLGdDQUFLLEtBQUtDLE9BQUwsQ0FBYUMsS0FBYixHQUFxQixLQUFyQixHQUE2QixJQUFsQyxDQUFQO0FBQ0Q7O0FBWDJDOztBQURYLGtCQUM3Qk4sS0FENkIsa0JBRVg7QUFDcEJNLElBQUFBLEtBQUssRUFBRSxNQUFNLENBQUU7QUFESyxHQUZXOztBQWVuQyxRQUFNQyxNQUFOLFNBQXFCWixLQUFLLENBQUNNLFNBQTNCLENBQStDO0FBSzdDTyxJQUFBQSxlQUFlLEdBQUc7QUFDaEIsYUFBTztBQUFDRixRQUFBQSxLQUFLLEVBQUU7QUFBUixPQUFQO0FBQ0Q7O0FBRURGLElBQUFBLE1BQU0sR0FBRztBQUNQLGFBQU8sb0JBQUMsS0FBRCxPQUFQO0FBQ0Q7O0FBWDRDOztBQWZaLGtCQWU3QkcsTUFmNkIsdUJBZ0JOO0FBQ3pCRCxJQUFBQSxLQUFLLEVBQUUsTUFBTSxDQUFFO0FBRFUsR0FoQk07O0FBNkJuQyxRQUFNRyxNQUFNLEdBQUcsTUFBTTtBQUNuQixXQUNFLG9CQUFDLE1BQUQsUUFDRSxvQkFBQyxLQUFELE9BREYsQ0FERjtBQUtELEdBTkQ7O0FBUUEsUUFBTUMsR0FBRyxHQUNQLG9CQUFDLFFBQUQsUUFDRSxvQkFBQyxNQUFELE9BREYsQ0FERjtBQUtBQyxFQUFBQSxNQUFNLENBQUMsTUFBTVosSUFBTixDQUFXSCxjQUFjLENBQUNjLEdBQUQsQ0FBekIsQ0FBRCxDQUFOLENBQXdDRSxVQUF4QztBQUNBLFFBQU1kLE9BQU8sQ0FBQ1ksR0FBRCxDQUFiO0FBQ0FDLEVBQUFBLE1BQU0sQ0FBQyxNQUFNWixJQUFOLENBQVdILGNBQWMsQ0FBQ2MsR0FBRCxDQUF6QixDQUFELENBQU4sQ0FBd0NFLFVBQXhDO0FBQ0QsQ0E3Q0csQ0FBSiIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBDb3B5cmlnaHQgKGMpIDIwMTggVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICovXG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7cmVuZGVyVG9TdHJpbmd9IGZyb20gJ3JlYWN0LWRvbS9zZXJ2ZXInO1xuaW1wb3J0IFByb3ZpZGVyIGZyb20gJy4uLy4uL3ByZXBhcmUtcHJvdmlkZXInO1xuaW1wb3J0IHtwcmVwYXJlfSBmcm9tICcuLi8uLi9pbmRleC5qcyc7XG5cbnRlc3QoJ0hhbmRsaW5nIGNvbnRleHQnLCBhc3luYyAoKSA9PiB7XG4gIGNsYXNzIENoaWxkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PGFueSwgYW55PiB7XG4gICAgc3RhdGljIGNvbnRleHRUeXBlcyA9IHtcbiAgICAgIGZpZWxkOiAoKSA9PiB7fSxcbiAgICB9O1xuXG4gICAgY29uc3RydWN0b3IocHJvcHM6ICopIHtcbiAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gPGgxPnt0aGlzLmNvbnRleHQuZmllbGQgPyAnWWVzJyA6ICdObyd9PC9oMT47XG4gICAgfVxuICB9XG5cbiAgY2xhc3MgUGFyZW50IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PGFueSwgYW55PiB7XG4gICAgc3RhdGljIGNoaWxkQ29udGV4dFR5cGVzID0ge1xuICAgICAgZmllbGQ6ICgpID0+IHt9LFxuICAgIH07XG5cbiAgICBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICByZXR1cm4ge2ZpZWxkOiB0cnVlfTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gPENoaWxkIC8+O1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IFRvVGVzdCA9ICgpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPFBhcmVudD5cbiAgICAgICAgPENoaWxkIC8+XG4gICAgICA8L1BhcmVudD5cbiAgICApO1xuICB9O1xuXG4gIGNvbnN0IGFwcCA9IChcbiAgICA8UHJvdmlkZXI+XG4gICAgICA8VG9UZXN0IC8+XG4gICAgPC9Qcm92aWRlcj5cbiAgKTtcbiAgZXhwZWN0KC9ZZXMvLnRlc3QocmVuZGVyVG9TdHJpbmcoYXBwKSkpLnRvQmVUcnV0aHkoKTtcbiAgYXdhaXQgcHJlcGFyZShhcHApO1xuICBleHBlY3QoL1llcy8udGVzdChyZW5kZXJUb1N0cmluZyhhcHApKSkudG9CZVRydXRoeSgpO1xufSk7XG4iXX0=