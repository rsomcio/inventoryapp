"use strict";

var React = _interopRequireWildcard(require("react"));

var _fusionTestUtils = require("fusion-test-utils");

var _server = _interopRequireDefault(require("../server"));

var _index = _interopRequireDefault(require("../index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
test('renders', () => {
  const rendered = (0, _server.default)(React.createElement('span', null, 'hello'));
  expect(/<span/.test(rendered)).toBeTruthy();
  expect(/hello/.test(rendered)).toBeTruthy();
});
test('app api', async done => {
  expect(typeof _index.default).toBe('function');

  try {
    const app = new _index.default(React.createElement('div', null, 'Hello World'));
    const simulator = (0, _fusionTestUtils.getSimulator)(app);
    const ctx = await simulator.render('/');
    expect(ctx.rendered.includes('Hello World')).toBeTruthy();
    expect(typeof ctx.body === 'string' && ctx.body.includes(ctx.rendered)).toBeTruthy();
  } catch (e) {
    expect(e).toBeFalsy();
  } finally {
    done();
  }
});
test('throw on non-element root', async () => {
  expect(() => {
    // $FlowFixMe
    new _index.default(function () {
      return null;
    });
  }).toThrow();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5ub2RlLmpzIl0sIm5hbWVzIjpbInRlc3QiLCJyZW5kZXJlZCIsIlJlYWN0IiwiY3JlYXRlRWxlbWVudCIsImV4cGVjdCIsInRvQmVUcnV0aHkiLCJkb25lIiwiQXBwIiwidG9CZSIsImFwcCIsInNpbXVsYXRvciIsImN0eCIsInJlbmRlciIsImluY2x1ZGVzIiwiYm9keSIsImUiLCJ0b0JlRmFsc3kiLCJ0b1Rocm93Il0sIm1hcHBpbmdzIjoiOztBQVFBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQVhBOzs7Ozs7O0FBYUFBLElBQUksQ0FBQyxTQUFELEVBQVksTUFBTTtBQUNwQixRQUFNQyxRQUFRLEdBQUcscUJBQU9DLEtBQUssQ0FBQ0MsYUFBTixDQUFvQixNQUFwQixFQUE0QixJQUE1QixFQUFrQyxPQUFsQyxDQUFQLENBQWpCO0FBQ0FDLEVBQUFBLE1BQU0sQ0FBQyxRQUFRSixJQUFSLENBQWFDLFFBQWIsQ0FBRCxDQUFOLENBQStCSSxVQUEvQjtBQUNBRCxFQUFBQSxNQUFNLENBQUMsUUFBUUosSUFBUixDQUFhQyxRQUFiLENBQUQsQ0FBTixDQUErQkksVUFBL0I7QUFDRCxDQUpHLENBQUo7QUFNQUwsSUFBSSxDQUFDLFNBQUQsRUFBWSxNQUFNTSxJQUFOLElBQWM7QUFDNUJGLEVBQUFBLE1BQU0sQ0FBQyxPQUFPRyxjQUFSLENBQU4sQ0FBbUJDLElBQW5CLENBQXdCLFVBQXhCOztBQUNBLE1BQUk7QUFDRixVQUFNQyxHQUFHLEdBQUcsSUFBSUYsY0FBSixDQUFRTCxLQUFLLENBQUNDLGFBQU4sQ0FBb0IsS0FBcEIsRUFBMkIsSUFBM0IsRUFBaUMsYUFBakMsQ0FBUixDQUFaO0FBQ0EsVUFBTU8sU0FBUyxHQUFHLG1DQUFhRCxHQUFiLENBQWxCO0FBQ0EsVUFBTUUsR0FBRyxHQUFHLE1BQU1ELFNBQVMsQ0FBQ0UsTUFBVixDQUFpQixHQUFqQixDQUFsQjtBQUNBUixJQUFBQSxNQUFNLENBQUNPLEdBQUcsQ0FBQ1YsUUFBSixDQUFhWSxRQUFiLENBQXNCLGFBQXRCLENBQUQsQ0FBTixDQUE2Q1IsVUFBN0M7QUFDQUQsSUFBQUEsTUFBTSxDQUNKLE9BQU9PLEdBQUcsQ0FBQ0csSUFBWCxLQUFvQixRQUFwQixJQUFnQ0gsR0FBRyxDQUFDRyxJQUFKLENBQVNELFFBQVQsQ0FBa0JGLEdBQUcsQ0FBQ1YsUUFBdEIsQ0FENUIsQ0FBTixDQUVFSSxVQUZGO0FBR0QsR0FSRCxDQVFFLE9BQU9VLENBQVAsRUFBVTtBQUNWWCxJQUFBQSxNQUFNLENBQUNXLENBQUQsQ0FBTixDQUFVQyxTQUFWO0FBQ0QsR0FWRCxTQVVVO0FBQ1JWLElBQUFBLElBQUk7QUFDTDtBQUNGLENBZkcsQ0FBSjtBQWlCQU4sSUFBSSxDQUFDLDJCQUFELEVBQThCLFlBQVk7QUFDNUNJLEVBQUFBLE1BQU0sQ0FBQyxNQUFNO0FBQ1g7QUFDQSxRQUFJRyxjQUFKLENBQVEsWUFBVztBQUNqQixhQUFPLElBQVA7QUFDRCxLQUZEO0FBR0QsR0FMSyxDQUFOLENBS0dVLE9BTEg7QUFNRCxDQVBHLENBQUoiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQ29weXJpZ2h0IChjKSAyMDE4IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqL1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge2dldFNpbXVsYXRvcn0gZnJvbSAnZnVzaW9uLXRlc3QtdXRpbHMnO1xuaW1wb3J0IHJlbmRlciBmcm9tICcuLi9zZXJ2ZXInO1xuaW1wb3J0IEFwcCBmcm9tICcuLi9pbmRleCc7XG5cbnRlc3QoJ3JlbmRlcnMnLCAoKSA9PiB7XG4gIGNvbnN0IHJlbmRlcmVkID0gcmVuZGVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nLCBudWxsLCAnaGVsbG8nKSk7XG4gIGV4cGVjdCgvPHNwYW4vLnRlc3QocmVuZGVyZWQpKS50b0JlVHJ1dGh5KCk7XG4gIGV4cGVjdCgvaGVsbG8vLnRlc3QocmVuZGVyZWQpKS50b0JlVHJ1dGh5KCk7XG59KTtcblxudGVzdCgnYXBwIGFwaScsIGFzeW5jIGRvbmUgPT4ge1xuICBleHBlY3QodHlwZW9mIEFwcCkudG9CZSgnZnVuY3Rpb24nKTtcbiAgdHJ5IHtcbiAgICBjb25zdCBhcHAgPSBuZXcgQXBwKFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ2RpdicsIG51bGwsICdIZWxsbyBXb3JsZCcpKTtcbiAgICBjb25zdCBzaW11bGF0b3IgPSBnZXRTaW11bGF0b3IoYXBwKTtcbiAgICBjb25zdCBjdHggPSBhd2FpdCBzaW11bGF0b3IucmVuZGVyKCcvJyk7XG4gICAgZXhwZWN0KGN0eC5yZW5kZXJlZC5pbmNsdWRlcygnSGVsbG8gV29ybGQnKSkudG9CZVRydXRoeSgpO1xuICAgIGV4cGVjdChcbiAgICAgIHR5cGVvZiBjdHguYm9keSA9PT0gJ3N0cmluZycgJiYgY3R4LmJvZHkuaW5jbHVkZXMoY3R4LnJlbmRlcmVkKVxuICAgICkudG9CZVRydXRoeSgpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgZXhwZWN0KGUpLnRvQmVGYWxzeSgpO1xuICB9IGZpbmFsbHkge1xuICAgIGRvbmUoKTtcbiAgfVxufSk7XG5cbnRlc3QoJ3Rocm93IG9uIG5vbi1lbGVtZW50IHJvb3QnLCBhc3luYyAoKSA9PiB7XG4gIGV4cGVjdCgoKSA9PiB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIG5ldyBBcHAoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9KTtcbiAgfSkudG9UaHJvdygpO1xufSk7XG4iXX0=