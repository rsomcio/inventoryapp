"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _context = require("./context.js");

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
function capitalize(str) {
  return str.replace(/^./, c => c.toUpperCase());
}

var _default = {
  create: (name, mapProvidesToProps, token) => {
    const mapProvides = mapProvidesToProps ? mapProvidesToProps : provides => ({
      [name]: provides
    });
    const _token = token; // Make token constant for flow

    if (_token) {
      // Use new Context through useService hook
      return Component => {
        const Wrapper = props => {
          const service = (0, _context.useService)(_token);
          return React.createElement(Component, { ...props,
            ...mapProvides(service)
          });
        };

        const displayName = Component.displayName || Component.name || 'Anonymous';
        Wrapper.displayName = `With${capitalize(name)}(${displayName})`;
        return Wrapper;
      };
    } else {
      // Use legacy Context
      return Component => {
        class HOC extends React.Component {
          constructor(props, ctx) {
            super(props, ctx);
            this.provides = ctx[name];
          }

          render() {
            const props = { ...this.props,
              ...mapProvides(this.provides)
            };
            return React.createElement(Component, props);
          }

        }

        const displayName = Component.displayName || Component.name || 'Anonymous';
        HOC.displayName = `With${capitalize(name)}(${displayName})`;
        HOC.contextTypes = {
          [name]: _propTypes.default.any.isRequired
        };
        return HOC;
      };
    }
  }
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvYy5qcyJdLCJuYW1lcyI6WyJjYXBpdGFsaXplIiwic3RyIiwicmVwbGFjZSIsImMiLCJ0b1VwcGVyQ2FzZSIsImNyZWF0ZSIsIm5hbWUiLCJtYXBQcm92aWRlc1RvUHJvcHMiLCJ0b2tlbiIsIm1hcFByb3ZpZGVzIiwicHJvdmlkZXMiLCJfdG9rZW4iLCJDb21wb25lbnQiLCJXcmFwcGVyIiwicHJvcHMiLCJzZXJ2aWNlIiwiUmVhY3QiLCJjcmVhdGVFbGVtZW50IiwiZGlzcGxheU5hbWUiLCJIT0MiLCJjb25zdHJ1Y3RvciIsImN0eCIsInJlbmRlciIsImNvbnRleHRUeXBlcyIsIlByb3BUeXBlcyIsImFueSIsImlzUmVxdWlyZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFRQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFWQTs7Ozs7OztBQWFBLFNBQVNBLFVBQVQsQ0FBb0JDLEdBQXBCLEVBQXlDO0FBQ3ZDLFNBQU9BLEdBQUcsQ0FBQ0MsT0FBSixDQUFZLElBQVosRUFBa0JDLENBQUMsSUFBSUEsQ0FBQyxDQUFDQyxXQUFGLEVBQXZCLENBQVA7QUFDRDs7ZUFHYztBQUNiQyxFQUFBQSxNQUFNLEVBQUUsQ0FDTkMsSUFETSxFQUVOQyxrQkFGTSxFQUdOQyxLQUhNLEtBSU87QUFDYixVQUFNQyxXQUFXLEdBQUdGLGtCQUFrQixHQUNsQ0Esa0JBRGtDLEdBRWxDRyxRQUFRLEtBQUs7QUFBQyxPQUFDSixJQUFELEdBQVFJO0FBQVQsS0FBTCxDQUZaO0FBR0EsVUFBTUMsTUFBTSxHQUFHSCxLQUFmLENBSmEsQ0FJUzs7QUFDdEIsUUFBSUcsTUFBSixFQUFZO0FBQ1Y7QUFDQSxhQUFRQyxTQUFELElBQXVDO0FBQzVDLGNBQU1DLE9BQU8sR0FBSUMsS0FBRCxJQUE2QjtBQUMzQyxnQkFBTUMsT0FBTyxHQUFHLHlCQUFXSixNQUFYLENBQWhCO0FBRUEsaUJBQU9LLEtBQUssQ0FBQ0MsYUFBTixDQUFvQkwsU0FBcEIsRUFBK0IsRUFDcEMsR0FBR0UsS0FEaUM7QUFFcEMsZUFBR0wsV0FBVyxDQUFDTSxPQUFEO0FBRnNCLFdBQS9CLENBQVA7QUFJRCxTQVBEOztBQVFBLGNBQU1HLFdBQVcsR0FDZk4sU0FBUyxDQUFDTSxXQUFWLElBQXlCTixTQUFTLENBQUNOLElBQW5DLElBQTJDLFdBRDdDO0FBRUFPLFFBQUFBLE9BQU8sQ0FBQ0ssV0FBUixHQUF1QixPQUFNbEIsVUFBVSxDQUFDTSxJQUFELENBQU8sSUFBR1ksV0FBWSxHQUE3RDtBQUNBLGVBQU9MLE9BQVA7QUFDRCxPQWJEO0FBY0QsS0FoQkQsTUFnQk87QUFDTDtBQUNBLGFBQVFELFNBQUQsSUFBdUM7QUFDNUMsY0FBTU8sR0FBTixTQUFrQkgsS0FBSyxDQUFDSixTQUF4QixDQUFxQztBQUduQ1EsVUFBQUEsV0FBVyxDQUFDTixLQUFELEVBQVdPLEdBQVgsRUFBbUI7QUFDNUIsa0JBQU1QLEtBQU4sRUFBYU8sR0FBYjtBQUNBLGlCQUFLWCxRQUFMLEdBQWdCVyxHQUFHLENBQUNmLElBQUQsQ0FBbkI7QUFDRDs7QUFDRGdCLFVBQUFBLE1BQU0sR0FBRztBQUNQLGtCQUFNUixLQUFLLEdBQUcsRUFBQyxHQUFHLEtBQUtBLEtBQVQ7QUFBZ0IsaUJBQUdMLFdBQVcsQ0FBQyxLQUFLQyxRQUFOO0FBQTlCLGFBQWQ7QUFDQSxtQkFBT00sS0FBSyxDQUFDQyxhQUFOLENBQW9CTCxTQUFwQixFQUErQkUsS0FBL0IsQ0FBUDtBQUNEOztBQVZrQzs7QUFZckMsY0FBTUksV0FBVyxHQUNmTixTQUFTLENBQUNNLFdBQVYsSUFBeUJOLFNBQVMsQ0FBQ04sSUFBbkMsSUFBMkMsV0FEN0M7QUFFQWEsUUFBQUEsR0FBRyxDQUFDRCxXQUFKLEdBQW1CLE9BQU1sQixVQUFVLENBQUNNLElBQUQsQ0FBTyxJQUFHWSxXQUFZLEdBQXpEO0FBQ0FDLFFBQUFBLEdBQUcsQ0FBQ0ksWUFBSixHQUFtQjtBQUNqQixXQUFDakIsSUFBRCxHQUFRa0IsbUJBQVVDLEdBQVYsQ0FBY0M7QUFETCxTQUFuQjtBQUdBLGVBQU9QLEdBQVA7QUFDRCxPQXBCRDtBQXFCRDtBQUNGO0FBbERZLEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQ29weXJpZ2h0IChjKSAyMDE4IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqL1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge3VzZVNlcnZpY2V9IGZyb20gJy4vY29udGV4dC5qcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHR5cGUge1Rva2VufSBmcm9tICdmdXNpb24tY29yZSc7XG5cbmZ1bmN0aW9uIGNhcGl0YWxpemUoc3RyOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL14uLywgYyA9PiBjLnRvVXBwZXJDYXNlKCkpO1xufVxuXG50eXBlIFJlYWN0SE9DID0gKFJlYWN0LkNvbXBvbmVudFR5cGU8Kj4pID0+IFJlYWN0LkNvbXBvbmVudFR5cGU8Kj47XG5leHBvcnQgZGVmYXVsdCB7XG4gIGNyZWF0ZTogKFxuICAgIG5hbWU6IHN0cmluZyxcbiAgICBtYXBQcm92aWRlc1RvUHJvcHM/OiBPYmplY3QgPT4gT2JqZWN0LFxuICAgIHRva2VuPzogVG9rZW48Kj5cbiAgKTogUmVhY3RIT0MgPT4ge1xuICAgIGNvbnN0IG1hcFByb3ZpZGVzID0gbWFwUHJvdmlkZXNUb1Byb3BzXG4gICAgICA/IG1hcFByb3ZpZGVzVG9Qcm9wc1xuICAgICAgOiBwcm92aWRlcyA9PiAoe1tuYW1lXTogcHJvdmlkZXN9KTtcbiAgICBjb25zdCBfdG9rZW4gPSB0b2tlbjsgLy8gTWFrZSB0b2tlbiBjb25zdGFudCBmb3IgZmxvd1xuICAgIGlmIChfdG9rZW4pIHtcbiAgICAgIC8vIFVzZSBuZXcgQ29udGV4dCB0aHJvdWdoIHVzZVNlcnZpY2UgaG9va1xuICAgICAgcmV0dXJuIChDb21wb25lbnQ6IFJlYWN0LkNvbXBvbmVudFR5cGU8Kj4pID0+IHtcbiAgICAgICAgY29uc3QgV3JhcHBlciA9IChwcm9wcz86IHtbc3RyaW5nXTogYW55fSkgPT4ge1xuICAgICAgICAgIGNvbnN0IHNlcnZpY2UgPSB1c2VTZXJ2aWNlKF90b2tlbik7XG5cbiAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIHtcbiAgICAgICAgICAgIC4uLnByb3BzLFxuICAgICAgICAgICAgLi4ubWFwUHJvdmlkZXMoc2VydmljZSksXG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGRpc3BsYXlOYW1lID1cbiAgICAgICAgICBDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUgfHwgJ0Fub255bW91cyc7XG4gICAgICAgIFdyYXBwZXIuZGlzcGxheU5hbWUgPSBgV2l0aCR7Y2FwaXRhbGl6ZShuYW1lKX0oJHtkaXNwbGF5TmFtZX0pYDtcbiAgICAgICAgcmV0dXJuIFdyYXBwZXI7XG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBVc2UgbGVnYWN5IENvbnRleHRcbiAgICAgIHJldHVybiAoQ29tcG9uZW50OiBSZWFjdC5Db21wb25lbnRUeXBlPCo+KSA9PiB7XG4gICAgICAgIGNsYXNzIEhPQyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDwqPiB7XG4gICAgICAgICAgcHJvdmlkZXM6IGFueTtcblxuICAgICAgICAgIGNvbnN0cnVjdG9yKHByb3BzOiAqLCBjdHg6ICopIHtcbiAgICAgICAgICAgIHN1cGVyKHByb3BzLCBjdHgpO1xuICAgICAgICAgICAgdGhpcy5wcm92aWRlcyA9IGN0eFtuYW1lXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmVuZGVyKCkge1xuICAgICAgICAgICAgY29uc3QgcHJvcHMgPSB7Li4udGhpcy5wcm9wcywgLi4ubWFwUHJvdmlkZXModGhpcy5wcm92aWRlcyl9O1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBwcm9wcyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRpc3BsYXlOYW1lID1cbiAgICAgICAgICBDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUgfHwgJ0Fub255bW91cyc7XG4gICAgICAgIEhPQy5kaXNwbGF5TmFtZSA9IGBXaXRoJHtjYXBpdGFsaXplKG5hbWUpfSgke2Rpc3BsYXlOYW1lfSlgO1xuICAgICAgICBIT0MuY29udGV4dFR5cGVzID0ge1xuICAgICAgICAgIFtuYW1lXTogUHJvcFR5cGVzLmFueS5pc1JlcXVpcmVkLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gSE9DO1xuICAgICAgfTtcbiAgICB9XG4gIH0sXG59O1xuIl19