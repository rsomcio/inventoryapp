/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/* eslint-disable react/no-multi-comp */
import * as React from 'react';
import { prepare } from '../../index.js';
test('Preparing a sync app passing through context', done => {
  let numConstructors = 0;
  let numRenders = 0;
  let numChildRenders = 0;

  class SimpleComponent extends React.Component {
    constructor(props, context) {
      super(props, context);
      numConstructors++;
    }

    getChildContext() {
      return {
        test: 'data'
      };
    }

    render() {
      numRenders++;
      return React.createElement(SimplePresentational, null);
    }

  }

  SimpleComponent.childContextTypes = {
    test: () => {}
  };

  function SimplePresentational(props, context) {
    expect(context.test).toBe('data');
    numChildRenders++;
    return React.createElement("div", null, "Hello World");
  }

  SimplePresentational.contextTypes = {
    test: () => {}
  };
  const app = React.createElement(SimpleComponent, null);
  const p = prepare(app);
  expect(p instanceof Promise).toBeTruthy();
  p.then(() => {
    expect(numConstructors).toBe(1);
    expect(numRenders).toBe(1);
    expect(numChildRenders).toBe(1);
    done();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByZXBhcmUtY29udGV4dC5ub2RlLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicHJlcGFyZSIsInRlc3QiLCJkb25lIiwibnVtQ29uc3RydWN0b3JzIiwibnVtUmVuZGVycyIsIm51bUNoaWxkUmVuZGVycyIsIlNpbXBsZUNvbXBvbmVudCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJjb250ZXh0IiwiZ2V0Q2hpbGRDb250ZXh0IiwicmVuZGVyIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJTaW1wbGVQcmVzZW50YXRpb25hbCIsImV4cGVjdCIsInRvQmUiLCJjb250ZXh0VHlwZXMiLCJhcHAiLCJwIiwiUHJvbWlzZSIsInRvQmVUcnV0aHkiLCJ0aGVuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTtBQUNBLE9BQU8sS0FBS0EsS0FBWixNQUF1QixPQUF2QjtBQUNBLFNBQVFDLE9BQVIsUUFBc0IsZ0JBQXRCO0FBRUFDLElBQUksQ0FBQyw4Q0FBRCxFQUFpREMsSUFBSSxJQUFJO0FBQzNELE1BQUlDLGVBQWUsR0FBRyxDQUF0QjtBQUNBLE1BQUlDLFVBQVUsR0FBRyxDQUFqQjtBQUNBLE1BQUlDLGVBQWUsR0FBRyxDQUF0Qjs7QUFDQSxRQUFNQyxlQUFOLFNBQThCUCxLQUFLLENBQUNRLFNBQXBDLENBQXdEO0FBQ3REQyxJQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUUMsT0FBUixFQUFpQjtBQUMxQixZQUFNRCxLQUFOLEVBQWFDLE9BQWI7QUFDQVAsTUFBQUEsZUFBZTtBQUNoQjs7QUFDRFEsSUFBQUEsZUFBZSxHQUFHO0FBQ2hCLGFBQU87QUFDTFYsUUFBQUEsSUFBSSxFQUFFO0FBREQsT0FBUDtBQUdEOztBQUNEVyxJQUFBQSxNQUFNLEdBQUc7QUFDUFIsTUFBQUEsVUFBVTtBQUNWLGFBQU8sb0JBQUMsb0JBQUQsT0FBUDtBQUNEOztBQWJxRDs7QUFleERFLEVBQUFBLGVBQWUsQ0FBQ08saUJBQWhCLEdBQW9DO0FBQ2xDWixJQUFBQSxJQUFJLEVBQUUsTUFBTSxDQUFFO0FBRG9CLEdBQXBDOztBQUdBLFdBQVNhLG9CQUFULENBQThCTCxLQUE5QixFQUFxQ0MsT0FBckMsRUFBOEM7QUFDNUNLLElBQUFBLE1BQU0sQ0FBQ0wsT0FBTyxDQUFDVCxJQUFULENBQU4sQ0FBcUJlLElBQXJCLENBQTBCLE1BQTFCO0FBQ0FYLElBQUFBLGVBQWU7QUFDZixXQUFPLCtDQUFQO0FBQ0Q7O0FBQ0RTLEVBQUFBLG9CQUFvQixDQUFDRyxZQUFyQixHQUFvQztBQUNsQ2hCLElBQUFBLElBQUksRUFBRSxNQUFNLENBQUU7QUFEb0IsR0FBcEM7QUFHQSxRQUFNaUIsR0FBRyxHQUFHLG9CQUFDLGVBQUQsT0FBWjtBQUNBLFFBQU1DLENBQUMsR0FBR25CLE9BQU8sQ0FBQ2tCLEdBQUQsQ0FBakI7QUFDQUgsRUFBQUEsTUFBTSxDQUFDSSxDQUFDLFlBQVlDLE9BQWQsQ0FBTixDQUE2QkMsVUFBN0I7QUFDQUYsRUFBQUEsQ0FBQyxDQUFDRyxJQUFGLENBQU8sTUFBTTtBQUNYUCxJQUFBQSxNQUFNLENBQUNaLGVBQUQsQ0FBTixDQUF3QmEsSUFBeEIsQ0FBNkIsQ0FBN0I7QUFDQUQsSUFBQUEsTUFBTSxDQUFDWCxVQUFELENBQU4sQ0FBbUJZLElBQW5CLENBQXdCLENBQXhCO0FBQ0FELElBQUFBLE1BQU0sQ0FBQ1YsZUFBRCxDQUFOLENBQXdCVyxJQUF4QixDQUE2QixDQUE3QjtBQUNBZCxJQUFBQSxJQUFJO0FBQ0wsR0FMRDtBQU1ELENBdkNHLENBQUoiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQ29weXJpZ2h0IChjKSAyMDE4IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9uby1tdWx0aS1jb21wICovXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge3ByZXBhcmV9IGZyb20gJy4uLy4uL2luZGV4LmpzJztcblxudGVzdCgnUHJlcGFyaW5nIGEgc3luYyBhcHAgcGFzc2luZyB0aHJvdWdoIGNvbnRleHQnLCBkb25lID0+IHtcbiAgbGV0IG51bUNvbnN0cnVjdG9ycyA9IDA7XG4gIGxldCBudW1SZW5kZXJzID0gMDtcbiAgbGV0IG51bUNoaWxkUmVuZGVycyA9IDA7XG4gIGNsYXNzIFNpbXBsZUNvbXBvbmVudCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxhbnksIGFueT4ge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzLCBjb250ZXh0KSB7XG4gICAgICBzdXBlcihwcm9wcywgY29udGV4dCk7XG4gICAgICBudW1Db25zdHJ1Y3RvcnMrKztcbiAgICB9XG4gICAgZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdGVzdDogJ2RhdGEnLFxuICAgICAgfTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgbnVtUmVuZGVycysrO1xuICAgICAgcmV0dXJuIDxTaW1wbGVQcmVzZW50YXRpb25hbCAvPjtcbiAgICB9XG4gIH1cbiAgU2ltcGxlQ29tcG9uZW50LmNoaWxkQ29udGV4dFR5cGVzID0ge1xuICAgIHRlc3Q6ICgpID0+IHt9LFxuICB9O1xuICBmdW5jdGlvbiBTaW1wbGVQcmVzZW50YXRpb25hbChwcm9wcywgY29udGV4dCkge1xuICAgIGV4cGVjdChjb250ZXh0LnRlc3QpLnRvQmUoJ2RhdGEnKTtcbiAgICBudW1DaGlsZFJlbmRlcnMrKztcbiAgICByZXR1cm4gPGRpdj5IZWxsbyBXb3JsZDwvZGl2PjtcbiAgfVxuICBTaW1wbGVQcmVzZW50YXRpb25hbC5jb250ZXh0VHlwZXMgPSB7XG4gICAgdGVzdDogKCkgPT4ge30sXG4gIH07XG4gIGNvbnN0IGFwcCA9IDxTaW1wbGVDb21wb25lbnQgLz47XG4gIGNvbnN0IHAgPSBwcmVwYXJlKGFwcCk7XG4gIGV4cGVjdChwIGluc3RhbmNlb2YgUHJvbWlzZSkudG9CZVRydXRoeSgpO1xuICBwLnRoZW4oKCkgPT4ge1xuICAgIGV4cGVjdChudW1Db25zdHJ1Y3RvcnMpLnRvQmUoMSk7XG4gICAgZXhwZWN0KG51bVJlbmRlcnMpLnRvQmUoMSk7XG4gICAgZXhwZWN0KG51bUNoaWxkUmVuZGVycykudG9CZSgxKTtcbiAgICBkb25lKCk7XG4gIH0pO1xufSk7XG4iXX0=