/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
import * as React from 'react';
import { createPlugin } from 'fusion-core';
import Provider from './provider'; // eslint-disable-next-line

export default {
  create: (name, plugin, provider) => {
    if (plugin.__plugin__ === undefined) {
      plugin = createPlugin(plugin);
    }

    if (!plugin.__plugin__) {
      throw new Error('Provided plugin does not match FusionPlugin<TDeps, TService>');
    }

    let originalMiddleware = plugin.middleware;
    const ProviderComponent = provider || Provider.create(name);

    plugin.middleware = (deps, provides) => {
      let nextMiddleware = originalMiddleware && originalMiddleware(deps, provides);

      const mw = function (ctx, next) {
        if (ctx.element) {
          ctx.element = React.createElement(ProviderComponent, {
            provides,
            ctx
          }, ctx.element);
        }

        if (nextMiddleware) {
          return nextMiddleware(ctx, next);
        }

        return next();
      };

      return mw;
    };

    return plugin;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbi5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsImNyZWF0ZVBsdWdpbiIsIlByb3ZpZGVyIiwiY3JlYXRlIiwibmFtZSIsInBsdWdpbiIsInByb3ZpZGVyIiwiX19wbHVnaW5fXyIsInVuZGVmaW5lZCIsIkVycm9yIiwib3JpZ2luYWxNaWRkbGV3YXJlIiwibWlkZGxld2FyZSIsIlByb3ZpZGVyQ29tcG9uZW50IiwiZGVwcyIsInByb3ZpZGVzIiwibmV4dE1pZGRsZXdhcmUiLCJtdyIsImN0eCIsIm5leHQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFRQSxPQUFPLEtBQUtBLEtBQVosTUFBdUIsT0FBdkI7QUFFQSxTQUFRQyxZQUFSLFFBQTJCLGFBQTNCO0FBR0EsT0FBT0MsUUFBUCxNQUFxQixZQUFyQixDLENBRUE7O0FBTUEsZUFBZTtBQUNiQyxFQUFBQSxNQUFNLEVBQUUsQ0FDTkMsSUFETSxFQUdOQyxNQUhNLEVBTU5DLFFBTk0sS0FPNEI7QUFDbEMsUUFBSUQsTUFBTSxDQUFDRSxVQUFQLEtBQXNCQyxTQUExQixFQUFxQztBQUNuQ0gsTUFBQUEsTUFBTSxHQUFHSixZQUFZLENBQUNJLE1BQUQsQ0FBckI7QUFDRDs7QUFDRCxRQUFJLENBQUNBLE1BQU0sQ0FBQ0UsVUFBWixFQUF3QjtBQUN0QixZQUFNLElBQUlFLEtBQUosQ0FDSiw4REFESSxDQUFOO0FBR0Q7O0FBRUQsUUFBSUMsa0JBQWtCLEdBQUdMLE1BQU0sQ0FBQ00sVUFBaEM7QUFDQSxVQUFNQyxpQkFBaUIsR0FBR04sUUFBUSxJQUFJSixRQUFRLENBQUNDLE1BQVQsQ0FBZ0JDLElBQWhCLENBQXRDOztBQUNBQyxJQUFBQSxNQUFNLENBQUNNLFVBQVAsR0FBb0IsQ0FBQ0UsSUFBRCxFQUFVQyxRQUFWLEtBQTBCO0FBQzVDLFVBQUlDLGNBQWMsR0FDaEJMLGtCQUFrQixJQUFJQSxrQkFBa0IsQ0FBQ0csSUFBRCxFQUFPQyxRQUFQLENBRDFDOztBQUVBLFlBQU1FLEVBQWMsR0FBRyxVQUFTQyxHQUFULEVBQWNDLElBQWQsRUFBb0I7QUFDekMsWUFBSUQsR0FBRyxDQUFDRSxPQUFSLEVBQWlCO0FBQ2ZGLFVBQUFBLEdBQUcsQ0FBQ0UsT0FBSixHQUFjbkIsS0FBSyxDQUFDb0IsYUFBTixDQUNaUixpQkFEWSxFQUVaO0FBQUNFLFlBQUFBLFFBQUQ7QUFBV0csWUFBQUE7QUFBWCxXQUZZLEVBR1pBLEdBQUcsQ0FBQ0UsT0FIUSxDQUFkO0FBS0Q7O0FBQ0QsWUFBSUosY0FBSixFQUFvQjtBQUNsQixpQkFBT0EsY0FBYyxDQUFDRSxHQUFELEVBQU1DLElBQU4sQ0FBckI7QUFDRDs7QUFDRCxlQUFPQSxJQUFJLEVBQVg7QUFDRCxPQVpEOztBQWFBLGFBQU9GLEVBQVA7QUFDRCxLQWpCRDs7QUFrQkEsV0FBT1gsTUFBUDtBQUNEO0FBdkNZLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQ29weXJpZ2h0IChjKSAyMDE4IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqL1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7Y3JlYXRlUGx1Z2lufSBmcm9tICdmdXNpb24tY29yZSc7XG5pbXBvcnQgdHlwZSB7RnVzaW9uUGx1Z2luLCBNaWRkbGV3YXJlfSBmcm9tICdmdXNpb24tY29yZSc7XG5cbmltcG9ydCBQcm92aWRlciBmcm9tICcuL3Byb3ZpZGVyJztcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG50eXBlIEZ1c2lvblBsdWdpbk5vSGlkZGVuPFREZXBzLCBUU2VydmljZT4gPSAkRGlmZjxcbiAgRnVzaW9uUGx1Z2luPFREZXBzLCBUU2VydmljZT4sXG4gIHtfX3BsdWdpbl9fOiBib29sZWFuLCBzdGFjazogc3RyaW5nfVxuPjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBjcmVhdGU6IDxURGVwczogKiwgVFNlcnZpY2U6ICo+KFxuICAgIG5hbWU6IHN0cmluZyxcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICBwbHVnaW46XG4gICAgICB8IEZ1c2lvblBsdWdpbk5vSGlkZGVuPFREZXBzLCBUU2VydmljZT5cbiAgICAgIHwgRnVzaW9uUGx1Z2luPFREZXBzLCBUU2VydmljZT4sXG4gICAgcHJvdmlkZXI/OiBSZWFjdC5Db21wb25lbnRUeXBlPCo+XG4gICk6IEZ1c2lvblBsdWdpbjxURGVwcywgVFNlcnZpY2U+ID0+IHtcbiAgICBpZiAocGx1Z2luLl9fcGx1Z2luX18gPT09IHVuZGVmaW5lZCkge1xuICAgICAgcGx1Z2luID0gY3JlYXRlUGx1Z2luKHBsdWdpbik7XG4gICAgfVxuICAgIGlmICghcGx1Z2luLl9fcGx1Z2luX18pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1Byb3ZpZGVkIHBsdWdpbiBkb2VzIG5vdCBtYXRjaCBGdXNpb25QbHVnaW48VERlcHMsIFRTZXJ2aWNlPidcbiAgICAgICk7XG4gICAgfVxuXG4gICAgbGV0IG9yaWdpbmFsTWlkZGxld2FyZSA9IHBsdWdpbi5taWRkbGV3YXJlO1xuICAgIGNvbnN0IFByb3ZpZGVyQ29tcG9uZW50ID0gcHJvdmlkZXIgfHwgUHJvdmlkZXIuY3JlYXRlKG5hbWUpO1xuICAgIHBsdWdpbi5taWRkbGV3YXJlID0gKGRlcHM6ICosIHByb3ZpZGVzOiAqKSA9PiB7XG4gICAgICBsZXQgbmV4dE1pZGRsZXdhcmUgPVxuICAgICAgICBvcmlnaW5hbE1pZGRsZXdhcmUgJiYgb3JpZ2luYWxNaWRkbGV3YXJlKGRlcHMsIHByb3ZpZGVzKTtcbiAgICAgIGNvbnN0IG13OiBNaWRkbGV3YXJlID0gZnVuY3Rpb24oY3R4LCBuZXh0KSB7XG4gICAgICAgIGlmIChjdHguZWxlbWVudCkge1xuICAgICAgICAgIGN0eC5lbGVtZW50ID0gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgIFByb3ZpZGVyQ29tcG9uZW50LFxuICAgICAgICAgICAge3Byb3ZpZGVzLCBjdHh9LFxuICAgICAgICAgICAgY3R4LmVsZW1lbnRcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChuZXh0TWlkZGxld2FyZSkge1xuICAgICAgICAgIHJldHVybiBuZXh0TWlkZGxld2FyZShjdHgsIG5leHQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXh0KCk7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIG13O1xuICAgIH07XG4gICAgcmV0dXJuIHBsdWdpbjtcbiAgfSxcbn07XG4iXX0=