/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
/* eslint-env node */
import assert from 'assert';
function load(key, value) {
  return process.env[key] || value;
}
export function loadEnv() {
  const rootDir = load('ROOT_DIR', '.');
  const env = load('NODE_ENV', 'development');
  if (!(env === 'development' || env === 'production' || env === 'test')) {
    throw new Error(`Invalid NODE_ENV loaded: ${env}.`);
  }
  const prefix = load('ROUTE_PREFIX', '');
  assert(!prefix.endsWith('/'), 'ROUTE_PREFIX must not end with /');
  const baseAssetPath = load('FRAMEWORK_STATIC_ASSET_PATH', `/_static`);
  assert(!baseAssetPath.endsWith('/'), 'FRAMEWORK_STATIC_ASSET_PATH must not end with /');
  const cdnUrl = load('CDN_URL', '');
  assert(!cdnUrl.endsWith('/'), 'CDN_URL must not end with /');
  const dangerouslyExposeSourceMaps = load('DANGEROUSLY_EXPOSE_SOURCE_MAPS', 'false');
  const assetPath = `${prefix}${baseAssetPath}`;
  return function loadEnv() {
    return {
      rootDir,
      env,
      prefix,
      assetPath,
      baseAssetPath,
      cdnUrl,
      webpackPublicPath: cdnUrl || assetPath,
      dangerouslyExposeSourceMaps: dangerouslyExposeSourceMaps === 'true'
    };
  };
}

// Handle flow-types for export so browser export is ignored.

export default false ? () => {} : loadEnv();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NlcnQiLCJsb2FkIiwia2V5IiwidmFsdWUiLCJwcm9jZXNzIiwiZW52IiwibG9hZEVudiIsInJvb3REaXIiLCJFcnJvciIsInByZWZpeCIsImVuZHNXaXRoIiwiYmFzZUFzc2V0UGF0aCIsImNkblVybCIsImRhbmdlcm91c2x5RXhwb3NlU291cmNlTWFwcyIsImFzc2V0UGF0aCIsIndlYnBhY2tQdWJsaWNQYXRoIl0sInNvdXJjZXMiOlsic3JjL2dldC1lbnYudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIENvcHlyaWdodCAoYykgMjAxOCBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuLyogZXNsaW50LWVudiBub2RlICovXG5pbXBvcnQgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XG5cbmZ1bmN0aW9uIGxvYWQoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gcHJvY2Vzcy5lbnZba2V5XSB8fCB2YWx1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRFbnYoKSB7XG4gIGNvbnN0IHJvb3REaXIgPSBsb2FkKCdST09UX0RJUicsICcuJyk7XG4gIGNvbnN0IGVudiA9IGxvYWQoJ05PREVfRU5WJywgJ2RldmVsb3BtZW50Jyk7XG4gIGlmICghKGVudiA9PT0gJ2RldmVsb3BtZW50JyB8fCBlbnYgPT09ICdwcm9kdWN0aW9uJyB8fCBlbnYgPT09ICd0ZXN0JykpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgTk9ERV9FTlYgbG9hZGVkOiAke2Vudn0uYCk7XG4gIH1cbiAgY29uc3QgcHJlZml4ID0gbG9hZCgnUk9VVEVfUFJFRklYJywgJycpO1xuICBhc3NlcnQoIXByZWZpeC5lbmRzV2l0aCgnLycpLCAnUk9VVEVfUFJFRklYIG11c3Qgbm90IGVuZCB3aXRoIC8nKTtcbiAgY29uc3QgYmFzZUFzc2V0UGF0aCA9IGxvYWQoJ0ZSQU1FV09SS19TVEFUSUNfQVNTRVRfUEFUSCcsIGAvX3N0YXRpY2ApO1xuICBhc3NlcnQoXG4gICAgIWJhc2VBc3NldFBhdGguZW5kc1dpdGgoJy8nKSxcbiAgICAnRlJBTUVXT1JLX1NUQVRJQ19BU1NFVF9QQVRIIG11c3Qgbm90IGVuZCB3aXRoIC8nXG4gICk7XG4gIGNvbnN0IGNkblVybCA9IGxvYWQoJ0NETl9VUkwnLCAnJyk7XG4gIGFzc2VydCghY2RuVXJsLmVuZHNXaXRoKCcvJyksICdDRE5fVVJMIG11c3Qgbm90IGVuZCB3aXRoIC8nKTtcbiAgY29uc3QgZGFuZ2Vyb3VzbHlFeHBvc2VTb3VyY2VNYXBzID0gbG9hZChcbiAgICAnREFOR0VST1VTTFlfRVhQT1NFX1NPVVJDRV9NQVBTJyxcbiAgICAnZmFsc2UnXG4gICk7XG5cbiAgY29uc3QgYXNzZXRQYXRoID0gYCR7cHJlZml4fSR7YmFzZUFzc2V0UGF0aH1gO1xuICByZXR1cm4gZnVuY3Rpb24gbG9hZEVudigpOiBFbnYge1xuICAgIHJldHVybiB7XG4gICAgICByb290RGlyLFxuICAgICAgZW52LFxuICAgICAgcHJlZml4LFxuICAgICAgYXNzZXRQYXRoLFxuICAgICAgYmFzZUFzc2V0UGF0aCxcbiAgICAgIGNkblVybCxcbiAgICAgIHdlYnBhY2tQdWJsaWNQYXRoOiBjZG5VcmwgfHwgYXNzZXRQYXRoLFxuICAgICAgZGFuZ2Vyb3VzbHlFeHBvc2VTb3VyY2VNYXBzOiBkYW5nZXJvdXNseUV4cG9zZVNvdXJjZU1hcHMgPT09ICd0cnVlJyxcbiAgICB9O1xuICB9O1xufVxuXG4vLyBIYW5kbGUgZmxvdy10eXBlcyBmb3IgZXhwb3J0IHNvIGJyb3dzZXIgZXhwb3J0IGlzIGlnbm9yZWQuXG50eXBlIEVudiA9IHtcbiAgcm9vdERpcjogc3RyaW5nO1xuICBlbnY6IHN0cmluZztcbiAgcHJlZml4OiBzdHJpbmc7XG4gIGFzc2V0UGF0aDogc3RyaW5nO1xuICBiYXNlQXNzZXRQYXRoOiBzdHJpbmc7XG4gIGNkblVybDogc3RyaW5nO1xuICB3ZWJwYWNrUHVibGljUGF0aDogc3RyaW5nO1xuICBkYW5nZXJvdXNseUV4cG9zZVNvdXJjZU1hcHM6IGJvb2xlYW47XG59O1xuXG5leHBvcnQgZGVmYXVsdCAoX19CUk9XU0VSX18gPyAoKSA9PiB7fSA6IGxvYWRFbnYoKSkgYXMgYW55IGFzICgpID0+IEVudjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPQSxNQUFNLE1BQU0sUUFBUTtBQUUzQixTQUFTQyxJQUFJLENBQUNDLEdBQUcsRUFBRUMsS0FBSyxFQUFFO0VBQ3hCLE9BQU9DLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxHQUFHLENBQUMsSUFBSUMsS0FBSztBQUNsQztBQUVBLE9BQU8sU0FBU0csT0FBTyxHQUFHO0VBQ3hCLE1BQU1DLE9BQU8sR0FBR04sSUFBSSxDQUFDLFVBQVUsRUFBRSxHQUFHLENBQUM7RUFDckMsTUFBTUksR0FBRyxHQUFHSixJQUFJLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQztFQUMzQyxJQUFJLEVBQUVJLEdBQUcsS0FBSyxhQUFhLElBQUlBLEdBQUcsS0FBSyxZQUFZLElBQUlBLEdBQUcsS0FBSyxNQUFNLENBQUMsRUFBRTtJQUN0RSxNQUFNLElBQUlHLEtBQUssQ0FBRSw0QkFBMkJILEdBQUksR0FBRSxDQUFDO0VBQ3JEO0VBQ0EsTUFBTUksTUFBTSxHQUFHUixJQUFJLENBQUMsY0FBYyxFQUFFLEVBQUUsQ0FBQztFQUN2Q0QsTUFBTSxDQUFDLENBQUNTLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFLGtDQUFrQyxDQUFDO0VBQ2pFLE1BQU1DLGFBQWEsR0FBR1YsSUFBSSxDQUFDLDZCQUE2QixFQUFHLFVBQVMsQ0FBQztFQUNyRUQsTUFBTSxDQUNKLENBQUNXLGFBQWEsQ0FBQ0QsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUM1QixpREFBaUQsQ0FDbEQ7RUFDRCxNQUFNRSxNQUFNLEdBQUdYLElBQUksQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDO0VBQ2xDRCxNQUFNLENBQUMsQ0FBQ1ksTUFBTSxDQUFDRixRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUUsNkJBQTZCLENBQUM7RUFDNUQsTUFBTUcsMkJBQTJCLEdBQUdaLElBQUksQ0FDdEMsZ0NBQWdDLEVBQ2hDLE9BQU8sQ0FDUjtFQUVELE1BQU1hLFNBQVMsR0FBSSxHQUFFTCxNQUFPLEdBQUVFLGFBQWMsRUFBQztFQUM3QyxPQUFPLFNBQVNMLE9BQU8sR0FBUTtJQUM3QixPQUFPO01BQ0xDLE9BQU87TUFDUEYsR0FBRztNQUNISSxNQUFNO01BQ05LLFNBQVM7TUFDVEgsYUFBYTtNQUNiQyxNQUFNO01BQ05HLGlCQUFpQixFQUFFSCxNQUFNLElBQUlFLFNBQVM7TUFDdENELDJCQUEyQixFQUFFQSwyQkFBMkIsS0FBSztJQUMvRCxDQUFDO0VBQ0gsQ0FBQztBQUNIOztBQUVBOztBQVlBLGVBQWdCLFFBQWMsTUFBTSxDQUFDLENBQUMsR0FBR1AsT0FBTyxFQUFFIn0=