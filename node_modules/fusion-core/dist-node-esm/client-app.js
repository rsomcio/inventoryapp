/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
/* eslint-env browser */
import { compose } from './compose';
import timing, { TimingToken } from './plugins/timing';
import BaseApp from './base-app';
import createClientHydrate, { getSerializedRoutePrefix } from './plugins/client-hydrate';
import createClientRenderer from './plugins/client-renderer';
import { RenderToken, ElementToken } from './tokens';
export default function () {
  return class ClientApp extends BaseApp {
    constructor(el, render) {
      super(el, render);
      this.register(TimingToken, timing);
      this.middleware({
        element: ElementToken
      }, createClientHydrate);
    }
    resolve() {
      this.middleware({
        render: RenderToken
      }, createClientRenderer(this));
      return super.resolve();
    }
    callback() {
      this.resolve();
      const middleware = compose(this.plugins);
      return () => {
        // TODO(#62): Create noop context object to match server api
        const routePrefix = getSerializedRoutePrefix();
        const replaceRouteRegex = new RegExp(`^${routePrefix}`);
        const ctx = {
          url: (window.location.pathname + window.location.search).replace(replaceRouteRegex, ''),
          element: null,
          body: null
        };
        return middleware(ctx, () => Promise.resolve()).then(() => ctx);
      };
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb21wb3NlIiwidGltaW5nIiwiVGltaW5nVG9rZW4iLCJCYXNlQXBwIiwiY3JlYXRlQ2xpZW50SHlkcmF0ZSIsImdldFNlcmlhbGl6ZWRSb3V0ZVByZWZpeCIsImNyZWF0ZUNsaWVudFJlbmRlcmVyIiwiUmVuZGVyVG9rZW4iLCJFbGVtZW50VG9rZW4iLCJDbGllbnRBcHAiLCJjb25zdHJ1Y3RvciIsImVsIiwicmVuZGVyIiwicmVnaXN0ZXIiLCJtaWRkbGV3YXJlIiwiZWxlbWVudCIsInJlc29sdmUiLCJjYWxsYmFjayIsInBsdWdpbnMiLCJyb3V0ZVByZWZpeCIsInJlcGxhY2VSb3V0ZVJlZ2V4IiwiUmVnRXhwIiwiY3R4IiwidXJsIiwid2luZG93IiwibG9jYXRpb24iLCJwYXRobmFtZSIsInNlYXJjaCIsInJlcGxhY2UiLCJib2R5IiwiUHJvbWlzZSIsInRoZW4iXSwic291cmNlcyI6WyJzcmMvY2xpZW50LWFwcC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQ29weXJpZ2h0IChjKSAyMDE4IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG4vKiBlc2xpbnQtZW52IGJyb3dzZXIgKi9cbmltcG9ydCB7Y29tcG9zZX0gZnJvbSAnLi9jb21wb3NlJztcbmltcG9ydCB0aW1pbmcsIHtUaW1pbmdUb2tlbn0gZnJvbSAnLi9wbHVnaW5zL3RpbWluZyc7XG5pbXBvcnQgQmFzZUFwcCBmcm9tICcuL2Jhc2UtYXBwJztcbmltcG9ydCBjcmVhdGVDbGllbnRIeWRyYXRlLCB7XG4gIGdldFNlcmlhbGl6ZWRSb3V0ZVByZWZpeCxcbn0gZnJvbSAnLi9wbHVnaW5zL2NsaWVudC1oeWRyYXRlJztcbmltcG9ydCBjcmVhdGVDbGllbnRSZW5kZXJlciBmcm9tICcuL3BsdWdpbnMvY2xpZW50LXJlbmRlcmVyJztcbmltcG9ydCB7UmVuZGVyVG9rZW4sIEVsZW1lbnRUb2tlbn0gZnJvbSAnLi90b2tlbnMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBjbGFzcyBDbGllbnRBcHAgZXh0ZW5kcyBCYXNlQXBwIHtcbiAgICBjb25zdHJ1Y3RvcihlbDogYW55LCByZW5kZXI6IGFueSkge1xuICAgICAgc3VwZXIoZWwsIHJlbmRlcik7XG4gICAgICB0aGlzLnJlZ2lzdGVyKFRpbWluZ1Rva2VuLCB0aW1pbmcpO1xuICAgICAgdGhpcy5taWRkbGV3YXJlKHtlbGVtZW50OiBFbGVtZW50VG9rZW59LCBjcmVhdGVDbGllbnRIeWRyYXRlKTtcbiAgICB9XG4gICAgcmVzb2x2ZSgpIHtcbiAgICAgIHRoaXMubWlkZGxld2FyZSh7cmVuZGVyOiBSZW5kZXJUb2tlbn0sIGNyZWF0ZUNsaWVudFJlbmRlcmVyKHRoaXMpKTtcbiAgICAgIHJldHVybiBzdXBlci5yZXNvbHZlKCk7XG4gICAgfVxuICAgIGNhbGxiYWNrKCkge1xuICAgICAgdGhpcy5yZXNvbHZlKCk7XG4gICAgICBjb25zdCBtaWRkbGV3YXJlID0gY29tcG9zZSh0aGlzLnBsdWdpbnMpO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgLy8gVE9ETygjNjIpOiBDcmVhdGUgbm9vcCBjb250ZXh0IG9iamVjdCB0byBtYXRjaCBzZXJ2ZXIgYXBpXG4gICAgICAgIGNvbnN0IHJvdXRlUHJlZml4ID0gZ2V0U2VyaWFsaXplZFJvdXRlUHJlZml4KCk7XG4gICAgICAgIGNvbnN0IHJlcGxhY2VSb3V0ZVJlZ2V4ID0gbmV3IFJlZ0V4cChgXiR7cm91dGVQcmVmaXh9YCk7XG4gICAgICAgIGNvbnN0IGN0eDogYW55ID0ge1xuICAgICAgICAgIHVybDogKHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSArIHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpLnJlcGxhY2UoXG4gICAgICAgICAgICByZXBsYWNlUm91dGVSZWdleCxcbiAgICAgICAgICAgICcnXG4gICAgICAgICAgKSxcbiAgICAgICAgICBlbGVtZW50OiBudWxsLFxuICAgICAgICAgIGJvZHk6IG51bGwsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBtaWRkbGV3YXJlKGN0eCwgKCkgPT4gUHJvbWlzZS5yZXNvbHZlKCkpLnRoZW4oKCkgPT4gY3R4KTtcbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVFBLE9BQU8sUUFBTyxXQUFXO0FBQ2pDLE9BQU9DLE1BQU0sSUFBR0MsV0FBVyxRQUFPLGtCQUFrQjtBQUNwRCxPQUFPQyxPQUFPLE1BQU0sWUFBWTtBQUNoQyxPQUFPQyxtQkFBbUIsSUFDeEJDLHdCQUF3QixRQUNuQiwwQkFBMEI7QUFDakMsT0FBT0Msb0JBQW9CLE1BQU0sMkJBQTJCO0FBQzVELFNBQVFDLFdBQVcsRUFBRUMsWUFBWSxRQUFPLFVBQVU7QUFFbEQsZUFBZSxZQUFZO0VBQ3pCLE9BQU8sTUFBTUMsU0FBUyxTQUFTTixPQUFPLENBQUM7SUFDckNPLFdBQVcsQ0FBQ0MsRUFBTyxFQUFFQyxNQUFXLEVBQUU7TUFDaEMsS0FBSyxDQUFDRCxFQUFFLEVBQUVDLE1BQU0sQ0FBQztNQUNqQixJQUFJLENBQUNDLFFBQVEsQ0FBQ1gsV0FBVyxFQUFFRCxNQUFNLENBQUM7TUFDbEMsSUFBSSxDQUFDYSxVQUFVLENBQUM7UUFBQ0MsT0FBTyxFQUFFUDtNQUFZLENBQUMsRUFBRUosbUJBQW1CLENBQUM7SUFDL0Q7SUFDQVksT0FBTyxHQUFHO01BQ1IsSUFBSSxDQUFDRixVQUFVLENBQUM7UUFBQ0YsTUFBTSxFQUFFTDtNQUFXLENBQUMsRUFBRUQsb0JBQW9CLENBQUMsSUFBSSxDQUFDLENBQUM7TUFDbEUsT0FBTyxLQUFLLENBQUNVLE9BQU8sRUFBRTtJQUN4QjtJQUNBQyxRQUFRLEdBQUc7TUFDVCxJQUFJLENBQUNELE9BQU8sRUFBRTtNQUNkLE1BQU1GLFVBQVUsR0FBR2QsT0FBTyxDQUFDLElBQUksQ0FBQ2tCLE9BQU8sQ0FBQztNQUN4QyxPQUFPLE1BQU07UUFDWDtRQUNBLE1BQU1DLFdBQVcsR0FBR2Qsd0JBQXdCLEVBQUU7UUFDOUMsTUFBTWUsaUJBQWlCLEdBQUcsSUFBSUMsTUFBTSxDQUFFLElBQUdGLFdBQVksRUFBQyxDQUFDO1FBQ3ZELE1BQU1HLEdBQVEsR0FBRztVQUNmQyxHQUFHLEVBQUUsQ0FBQ0MsTUFBTSxDQUFDQyxRQUFRLENBQUNDLFFBQVEsR0FBR0YsTUFBTSxDQUFDQyxRQUFRLENBQUNFLE1BQU0sRUFBRUMsT0FBTyxDQUM5RFIsaUJBQWlCLEVBQ2pCLEVBQUUsQ0FDSDtVQUNETCxPQUFPLEVBQUUsSUFBSTtVQUNiYyxJQUFJLEVBQUU7UUFDUixDQUFDO1FBQ0QsT0FBT2YsVUFBVSxDQUFDUSxHQUFHLEVBQUUsTUFBTVEsT0FBTyxDQUFDZCxPQUFPLEVBQUUsQ0FBQyxDQUFDZSxJQUFJLENBQUMsTUFBTVQsR0FBRyxDQUFDO01BQ2pFLENBQUM7SUFDSDtFQUNGLENBQUM7QUFDSCJ9