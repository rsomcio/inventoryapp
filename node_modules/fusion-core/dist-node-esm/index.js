/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

import BaseApp from './base-app';
import serverApp from './server-app';
import getEnv from './get-env';
const FusionApp = false ? clientApp() : serverApp();
export default FusionApp;
export { compose } from './compose';
export { memoize } from './memoize';
// sanitization API
export { html, dangerouslySetHTML, consumeSanitizedHTML, escape, unescape } from './sanitization';

// Virtual modules
export { assetUrl, chunkId, syncChunkIds, syncChunkPaths, workerUrl } from './virtual/index';
export { RenderToken, ElementToken, SSRDeciderToken, HttpServerToken, SSRBodyTemplateToken, SSRShellTemplateToken, RoutePrefixToken, CriticalChunkIdsToken, RouteTagsToken, EnableMiddlewareTimingToken, unstable_EnableServerStreamingToken, ErrorHandlerToken } from './tokens';
export { createPlugin } from './create-plugin';
export { createToken } from './create-token';
export { getEnv };
export { withUniversalValue, withRenderSetup, unstable_withPrepareEffect, withEndpoint, withMiddleware, withUniversalMiddleware } from './core';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCYXNlQXBwIiwic2VydmVyQXBwIiwiZ2V0RW52IiwiRnVzaW9uQXBwIiwiY2xpZW50QXBwIiwiY29tcG9zZSIsIm1lbW9pemUiLCJodG1sIiwiZGFuZ2Vyb3VzbHlTZXRIVE1MIiwiY29uc3VtZVNhbml0aXplZEhUTUwiLCJlc2NhcGUiLCJ1bmVzY2FwZSIsImFzc2V0VXJsIiwiY2h1bmtJZCIsInN5bmNDaHVua0lkcyIsInN5bmNDaHVua1BhdGhzIiwid29ya2VyVXJsIiwiUmVuZGVyVG9rZW4iLCJFbGVtZW50VG9rZW4iLCJTU1JEZWNpZGVyVG9rZW4iLCJIdHRwU2VydmVyVG9rZW4iLCJTU1JCb2R5VGVtcGxhdGVUb2tlbiIsIlNTUlNoZWxsVGVtcGxhdGVUb2tlbiIsIlJvdXRlUHJlZml4VG9rZW4iLCJDcml0aWNhbENodW5rSWRzVG9rZW4iLCJSb3V0ZVRhZ3NUb2tlbiIsIkVuYWJsZU1pZGRsZXdhcmVUaW1pbmdUb2tlbiIsInVuc3RhYmxlX0VuYWJsZVNlcnZlclN0cmVhbWluZ1Rva2VuIiwiRXJyb3JIYW5kbGVyVG9rZW4iLCJjcmVhdGVQbHVnaW4iLCJjcmVhdGVUb2tlbiIsIndpdGhVbml2ZXJzYWxWYWx1ZSIsIndpdGhSZW5kZXJTZXR1cCIsInVuc3RhYmxlX3dpdGhQcmVwYXJlRWZmZWN0Iiwid2l0aEVuZHBvaW50Iiwid2l0aE1pZGRsZXdhcmUiLCJ3aXRoVW5pdmVyc2FsTWlkZGxld2FyZSJdLCJzb3VyY2VzIjpbInNyYy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQ29weXJpZ2h0IChjKSAyMDE4IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5pbXBvcnQgdHlwZSB7XG4gIEV4dHJhY3RUb2tlblR5cGUsXG4gIEV4dHJhY3REZXBzVHlwZSxcbiAgQ29udGV4dCxcbiAgRnVzaW9uUGx1Z2luLFxuICBGdXNpb25QbHVnaW5EZXBzVHlwZSxcbiAgTWlkZGxld2FyZSxcbiAgVG9rZW4sXG4gIFNTUkJvZHlUZW1wbGF0ZSxcbiAgUmVuZGVyVHlwZSBhcyBSZW5kZXIsXG4gIFJvdXRlVGFnc1R5cGUsXG59IGZyb20gJy4vdHlwZXMnO1xuXG5pbXBvcnQgQmFzZUFwcCBmcm9tICcuL2Jhc2UtYXBwJztcbmltcG9ydCBzZXJ2ZXJBcHAgZnJvbSAnLi9zZXJ2ZXItYXBwJztcbmltcG9ydCBjbGllbnRBcHAgZnJvbSAnLi9jbGllbnQtYXBwJztcbmltcG9ydCBnZXRFbnYgZnJvbSAnLi9nZXQtZW52JztcblxuaW50ZXJmYWNlIEZ1c2lvbkFwcCBleHRlbmRzIEJhc2VBcHAge31cbmNvbnN0IEZ1c2lvbkFwcDogdHlwZW9mIEJhc2VBcHAgPSBfX0JST1dTRVJfXyA/IGNsaWVudEFwcCgpIDogc2VydmVyQXBwKCk7XG5leHBvcnQgZGVmYXVsdCBGdXNpb25BcHA7XG5cbmV4cG9ydCB7Y29tcG9zZX0gZnJvbSAnLi9jb21wb3NlJztcbmV4cG9ydCB7bWVtb2l6ZX0gZnJvbSAnLi9tZW1vaXplJztcbmV4cG9ydCB0eXBlIHtNZW1vaXplRm59IGZyb20gJy4vbWVtb2l6ZSc7XG5cbi8vIHNhbml0aXphdGlvbiBBUElcbmV4cG9ydCB7XG4gIGh0bWwsXG4gIGRhbmdlcm91c2x5U2V0SFRNTCxcbiAgY29uc3VtZVNhbml0aXplZEhUTUwsXG4gIGVzY2FwZSxcbiAgdW5lc2NhcGUsXG59IGZyb20gJy4vc2FuaXRpemF0aW9uJztcblxuLy8gVmlydHVhbCBtb2R1bGVzXG5leHBvcnQge1xuICBhc3NldFVybCxcbiAgY2h1bmtJZCxcbiAgc3luY0NodW5rSWRzLFxuICBzeW5jQ2h1bmtQYXRocyxcbiAgd29ya2VyVXJsLFxufSBmcm9tICcuL3ZpcnR1YWwvaW5kZXgnO1xuXG5leHBvcnQge1xuICBSZW5kZXJUb2tlbixcbiAgRWxlbWVudFRva2VuLFxuICBTU1JEZWNpZGVyVG9rZW4sXG4gIEh0dHBTZXJ2ZXJUb2tlbixcbiAgU1NSQm9keVRlbXBsYXRlVG9rZW4sXG4gIFNTUlNoZWxsVGVtcGxhdGVUb2tlbixcbiAgUm91dGVQcmVmaXhUb2tlbixcbiAgQ3JpdGljYWxDaHVua0lkc1Rva2VuLFxuICBSb3V0ZVRhZ3NUb2tlbixcbiAgRW5hYmxlTWlkZGxld2FyZVRpbWluZ1Rva2VuLFxuICB1bnN0YWJsZV9FbmFibGVTZXJ2ZXJTdHJlYW1pbmdUb2tlbixcbiAgRXJyb3JIYW5kbGVyVG9rZW4sXG59IGZyb20gJy4vdG9rZW5zJztcblxuZXhwb3J0IHR5cGUge0Vycm9ySGFuZGxlclR5cGV9IGZyb20gJy4vdG9rZW5zJztcblxuZXhwb3J0IHtjcmVhdGVQbHVnaW59IGZyb20gJy4vY3JlYXRlLXBsdWdpbic7XG5leHBvcnQge2NyZWF0ZVRva2VufSBmcm9tICcuL2NyZWF0ZS10b2tlbic7XG5leHBvcnQge2dldEVudn07XG5leHBvcnQge1xuICB3aXRoVW5pdmVyc2FsVmFsdWUsXG4gIHdpdGhSZW5kZXJTZXR1cCxcbiAgdW5zdGFibGVfd2l0aFByZXBhcmVFZmZlY3QsXG4gIHdpdGhFbmRwb2ludCxcbiAgd2l0aE1pZGRsZXdhcmUsXG4gIHdpdGhVbml2ZXJzYWxNaWRkbGV3YXJlLFxufSBmcm9tICcuL2NvcmUnO1xuXG5leHBvcnQgdHlwZSB7XG4gIENvbnRleHQsXG4gIEZ1c2lvbkFwcCxcbiAgRnVzaW9uUGx1Z2luLFxuICBGdXNpb25QbHVnaW5EZXBzVHlwZSxcbiAgTWlkZGxld2FyZSxcbiAgVG9rZW4sXG4gIFNTUkJvZHlUZW1wbGF0ZSxcbiAgUmVuZGVyLFxuICBSb3V0ZVRhZ3NUeXBlLFxuICBFeHRyYWN0RGVwc1R5cGUsXG4gIEV4dHJhY3RUb2tlblR5cGUsXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBY0EsT0FBT0EsT0FBTyxNQUFNLFlBQVk7QUFDaEMsT0FBT0MsU0FBUyxNQUFNLGNBQWM7QUFFcEMsT0FBT0MsTUFBTSxNQUFNLFdBQVc7QUFHOUIsTUFBTUMsU0FBeUIsR0FBRyxRQUFjQyxTQUFTLEVBQUUsR0FBR0gsU0FBUyxFQUFFO0FBQ3pFLGVBQWVFLFNBQVM7QUFFeEIsU0FBUUUsT0FBTyxRQUFPLFdBQVc7QUFDakMsU0FBUUMsT0FBTyxRQUFPLFdBQVc7QUFHakM7QUFDQSxTQUNFQyxJQUFJLEVBQ0pDLGtCQUFrQixFQUNsQkMsb0JBQW9CLEVBQ3BCQyxNQUFNLEVBQ05DLFFBQVEsUUFDSCxnQkFBZ0I7O0FBRXZCO0FBQ0EsU0FDRUMsUUFBUSxFQUNSQyxPQUFPLEVBQ1BDLFlBQVksRUFDWkMsY0FBYyxFQUNkQyxTQUFTLFFBQ0osaUJBQWlCO0FBRXhCLFNBQ0VDLFdBQVcsRUFDWEMsWUFBWSxFQUNaQyxlQUFlLEVBQ2ZDLGVBQWUsRUFDZkMsb0JBQW9CLEVBQ3BCQyxxQkFBcUIsRUFDckJDLGdCQUFnQixFQUNoQkMscUJBQXFCLEVBQ3JCQyxjQUFjLEVBQ2RDLDJCQUEyQixFQUMzQkMsbUNBQW1DLEVBQ25DQyxpQkFBaUIsUUFDWixVQUFVO0FBSWpCLFNBQVFDLFlBQVksUUFBTyxpQkFBaUI7QUFDNUMsU0FBUUMsV0FBVyxRQUFPLGdCQUFnQjtBQUMxQyxTQUFRNUIsTUFBTTtBQUNkLFNBQ0U2QixrQkFBa0IsRUFDbEJDLGVBQWUsRUFDZkMsMEJBQTBCLEVBQzFCQyxZQUFZLEVBQ1pDLGNBQWMsRUFDZEMsdUJBQXVCLFFBQ2xCLFFBQVEifQ==