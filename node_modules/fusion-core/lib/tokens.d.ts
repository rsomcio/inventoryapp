/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
/// <reference types="node" />
import type { RenderType, SSRDecider, SSRBodyTemplate, SSRShellTemplate, Context, RouteTagsType, Token } from './types';
import type { Server } from 'http';
export declare const RouteTagsToken: Token<RouteTagsType>;
export declare const RenderToken: Token<RenderType>;
export declare const ElementToken: Token<any>;
export declare const SSRDeciderToken: Token<SSRDecider>;
export declare const HttpServerToken: Token<Server>;
export declare const SSRBodyTemplateToken: Token<SSRBodyTemplate>;
export declare const SSRShellTemplateToken: Token<SSRShellTemplate>;
export declare const RoutePrefixToken: Token<string>;
export declare const unstable_EnableServerStreamingToken: Token<boolean>;
export type CriticalChunkIds = Set<number>;
export type CriticalChunkIdsService = {
    from(ctx: Context): CriticalChunkIds;
};
export declare const CriticalChunkIdsToken: Token<CriticalChunkIdsService>;
export declare const EnableMiddlewareTimingToken: Token<boolean>;
export type ErrorHandlerType = (e: Error, captureType: string, ctx?: Context | null) => Promise<any> | void;
export declare const ErrorHandlerToken: Token<ErrorHandlerType>;
//# sourceMappingURL=tokens.d.ts.map