/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

export default function createClientRenderPlugin(app) {
  return function clientRenderPlugin({
    render
  }) {
    return function renderer(ctx, next) {
      app.renderSetupCtx = ctx;
      // Element wrappers should be added in *reverse* topological order so that
      // the resulting element tree is in topological order during renders.
      // For example, if plugin B depends on plugin A, the tree should be:
      // <AProvider>
      //   <BProvider>{root}</BProvider>
      // </APRovider>
      // In this case, B provider can depend on the context of A provider.
      for (var i = app.renderSetup.length - 1; i >= 0; i--) {
        const wrapper = app.renderSetup[i];
        const result = wrapper(ctx.element);
        if (result !== void 0) {
          ctx.element = result;
        }
      }
      app.renderSetupCtx = void 0;
      const rendered = render(ctx.element, ctx);
      if (rendered instanceof Promise) {
        return rendered.then(r => {
          ctx.rendered = r;
          return next();
        });
      } else {
        ctx.rendered = rendered;
        return next();
      }
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVDbGllbnRSZW5kZXJQbHVnaW4iLCJhcHAiLCJjbGllbnRSZW5kZXJQbHVnaW4iLCJyZW5kZXIiLCJyZW5kZXJlciIsImN0eCIsIm5leHQiLCJyZW5kZXJTZXR1cEN0eCIsImkiLCJyZW5kZXJTZXR1cCIsImxlbmd0aCIsIndyYXBwZXIiLCJyZXN1bHQiLCJlbGVtZW50IiwicmVuZGVyZWQiLCJQcm9taXNlIiwidGhlbiIsInIiXSwic291cmNlcyI6WyJzcmMvcGx1Z2lucy9jbGllbnQtcmVuZGVyZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIENvcHlyaWdodCAoYykgMjAxOCBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG5pbXBvcnQgdHlwZSB7Q29udGV4dCwgUmVuZGVyVHlwZX0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVDbGllbnRSZW5kZXJQbHVnaW4oYXBwKSB7XG4gIHJldHVybiBmdW5jdGlvbiBjbGllbnRSZW5kZXJQbHVnaW4oe3JlbmRlcn06IHtyZW5kZXI6IFJlbmRlclR5cGV9KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlbmRlcmVyKGN0eDogQ29udGV4dCwgbmV4dDogKCkgPT4gUHJvbWlzZTx2b2lkPikge1xuICAgICAgYXBwLnJlbmRlclNldHVwQ3R4ID0gY3R4O1xuICAgICAgLy8gRWxlbWVudCB3cmFwcGVycyBzaG91bGQgYmUgYWRkZWQgaW4gKnJldmVyc2UqIHRvcG9sb2dpY2FsIG9yZGVyIHNvIHRoYXRcbiAgICAgIC8vIHRoZSByZXN1bHRpbmcgZWxlbWVudCB0cmVlIGlzIGluIHRvcG9sb2dpY2FsIG9yZGVyIGR1cmluZyByZW5kZXJzLlxuICAgICAgLy8gRm9yIGV4YW1wbGUsIGlmIHBsdWdpbiBCIGRlcGVuZHMgb24gcGx1Z2luIEEsIHRoZSB0cmVlIHNob3VsZCBiZTpcbiAgICAgIC8vIDxBUHJvdmlkZXI+XG4gICAgICAvLyAgIDxCUHJvdmlkZXI+e3Jvb3R9PC9CUHJvdmlkZXI+XG4gICAgICAvLyA8L0FQUm92aWRlcj5cbiAgICAgIC8vIEluIHRoaXMgY2FzZSwgQiBwcm92aWRlciBjYW4gZGVwZW5kIG9uIHRoZSBjb250ZXh0IG9mIEEgcHJvdmlkZXIuXG4gICAgICBmb3IgKHZhciBpID0gYXBwLnJlbmRlclNldHVwLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgIGNvbnN0IHdyYXBwZXIgPSBhcHAucmVuZGVyU2V0dXBbaV07XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHdyYXBwZXIoY3R4LmVsZW1lbnQpO1xuICAgICAgICBpZiAocmVzdWx0ICE9PSB2b2lkIDApIHtcbiAgICAgICAgICBjdHguZWxlbWVudCA9IHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgYXBwLnJlbmRlclNldHVwQ3R4ID0gdm9pZCAwO1xuXG4gICAgICBjb25zdCByZW5kZXJlZCA9IHJlbmRlcihjdHguZWxlbWVudCwgY3R4KTtcbiAgICAgIGlmIChyZW5kZXJlZCBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgcmV0dXJuIHJlbmRlcmVkLnRoZW4oKHIpID0+IHtcbiAgICAgICAgICBjdHgucmVuZGVyZWQgPSByO1xuICAgICAgICAgIHJldHVybiBuZXh0KCk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY3R4LnJlbmRlcmVkID0gcmVuZGVyZWQ7XG4gICAgICAgIHJldHVybiBuZXh0KCk7XG4gICAgICB9XG4gICAgfTtcbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlBLGVBQWUsU0FBU0Esd0JBQXdCLENBQUNDLEdBQUcsRUFBRTtFQUNwRCxPQUFPLFNBQVNDLGtCQUFrQixDQUFDO0lBQUNDO0VBQTRCLENBQUMsRUFBRTtJQUNqRSxPQUFPLFNBQVNDLFFBQVEsQ0FBQ0MsR0FBWSxFQUFFQyxJQUF5QixFQUFFO01BQ2hFTCxHQUFHLENBQUNNLGNBQWMsR0FBR0YsR0FBRztNQUN4QjtNQUNBO01BQ0E7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBLEtBQUssSUFBSUcsQ0FBQyxHQUFHUCxHQUFHLENBQUNRLFdBQVcsQ0FBQ0MsTUFBTSxHQUFHLENBQUMsRUFBRUYsQ0FBQyxJQUFJLENBQUMsRUFBRUEsQ0FBQyxFQUFFLEVBQUU7UUFDcEQsTUFBTUcsT0FBTyxHQUFHVixHQUFHLENBQUNRLFdBQVcsQ0FBQ0QsQ0FBQyxDQUFDO1FBQ2xDLE1BQU1JLE1BQU0sR0FBR0QsT0FBTyxDQUFDTixHQUFHLENBQUNRLE9BQU8sQ0FBQztRQUNuQyxJQUFJRCxNQUFNLEtBQUssS0FBSyxDQUFDLEVBQUU7VUFDckJQLEdBQUcsQ0FBQ1EsT0FBTyxHQUFHRCxNQUFNO1FBQ3RCO01BQ0Y7TUFDQVgsR0FBRyxDQUFDTSxjQUFjLEdBQUcsS0FBSyxDQUFDO01BRTNCLE1BQU1PLFFBQVEsR0FBR1gsTUFBTSxDQUFDRSxHQUFHLENBQUNRLE9BQU8sRUFBRVIsR0FBRyxDQUFDO01BQ3pDLElBQUlTLFFBQVEsWUFBWUMsT0FBTyxFQUFFO1FBQy9CLE9BQU9ELFFBQVEsQ0FBQ0UsSUFBSSxDQUFFQyxDQUFDLElBQUs7VUFDMUJaLEdBQUcsQ0FBQ1MsUUFBUSxHQUFHRyxDQUFDO1VBQ2hCLE9BQU9YLElBQUksRUFBRTtRQUNmLENBQUMsQ0FBQztNQUNKLENBQUMsTUFBTTtRQUNMRCxHQUFHLENBQUNTLFFBQVEsR0FBR0EsUUFBUTtRQUN2QixPQUFPUixJQUFJLEVBQUU7TUFDZjtJQUNGLENBQUM7RUFDSCxDQUFDO0FBQ0gifQ==