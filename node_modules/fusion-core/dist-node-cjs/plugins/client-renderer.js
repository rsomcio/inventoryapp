"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createClientRenderPlugin;
/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

function createClientRenderPlugin(app) {
  return function clientRenderPlugin({
    render
  }) {
    return function renderer(ctx, next) {
      app.renderSetupCtx = ctx;
      // Element wrappers should be added in *reverse* topological order so that
      // the resulting element tree is in topological order during renders.
      // For example, if plugin B depends on plugin A, the tree should be:
      // <AProvider>
      //   <BProvider>{root}</BProvider>
      // </APRovider>
      // In this case, B provider can depend on the context of A provider.
      for (var i = app.renderSetup.length - 1; i >= 0; i--) {
        const wrapper = app.renderSetup[i];
        const result = wrapper(ctx.element);
        if (result !== void 0) {
          ctx.element = result;
        }
      }
      app.renderSetupCtx = void 0;
      const rendered = render(ctx.element, ctx);
      if (rendered instanceof Promise) {
        return rendered.then(r => {
          ctx.rendered = r;
          return next();
        });
      } else {
        ctx.rendered = rendered;
        return next();
      }
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVDbGllbnRSZW5kZXJQbHVnaW4iLCJhcHAiLCJjbGllbnRSZW5kZXJQbHVnaW4iLCJyZW5kZXIiLCJyZW5kZXJlciIsImN0eCIsIm5leHQiLCJyZW5kZXJTZXR1cEN0eCIsImkiLCJyZW5kZXJTZXR1cCIsImxlbmd0aCIsIndyYXBwZXIiLCJyZXN1bHQiLCJlbGVtZW50IiwicmVuZGVyZWQiLCJQcm9taXNlIiwidGhlbiIsInIiXSwic291cmNlcyI6WyJzcmMvcGx1Z2lucy9jbGllbnQtcmVuZGVyZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIENvcHlyaWdodCAoYykgMjAxOCBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG5pbXBvcnQgdHlwZSB7Q29udGV4dCwgUmVuZGVyVHlwZX0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVDbGllbnRSZW5kZXJQbHVnaW4oYXBwKSB7XG4gIHJldHVybiBmdW5jdGlvbiBjbGllbnRSZW5kZXJQbHVnaW4oe3JlbmRlcn06IHtyZW5kZXI6IFJlbmRlclR5cGV9KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlbmRlcmVyKGN0eDogQ29udGV4dCwgbmV4dDogKCkgPT4gUHJvbWlzZTx2b2lkPikge1xuICAgICAgYXBwLnJlbmRlclNldHVwQ3R4ID0gY3R4O1xuICAgICAgLy8gRWxlbWVudCB3cmFwcGVycyBzaG91bGQgYmUgYWRkZWQgaW4gKnJldmVyc2UqIHRvcG9sb2dpY2FsIG9yZGVyIHNvIHRoYXRcbiAgICAgIC8vIHRoZSByZXN1bHRpbmcgZWxlbWVudCB0cmVlIGlzIGluIHRvcG9sb2dpY2FsIG9yZGVyIGR1cmluZyByZW5kZXJzLlxuICAgICAgLy8gRm9yIGV4YW1wbGUsIGlmIHBsdWdpbiBCIGRlcGVuZHMgb24gcGx1Z2luIEEsIHRoZSB0cmVlIHNob3VsZCBiZTpcbiAgICAgIC8vIDxBUHJvdmlkZXI+XG4gICAgICAvLyAgIDxCUHJvdmlkZXI+e3Jvb3R9PC9CUHJvdmlkZXI+XG4gICAgICAvLyA8L0FQUm92aWRlcj5cbiAgICAgIC8vIEluIHRoaXMgY2FzZSwgQiBwcm92aWRlciBjYW4gZGVwZW5kIG9uIHRoZSBjb250ZXh0IG9mIEEgcHJvdmlkZXIuXG4gICAgICBmb3IgKHZhciBpID0gYXBwLnJlbmRlclNldHVwLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgIGNvbnN0IHdyYXBwZXIgPSBhcHAucmVuZGVyU2V0dXBbaV07XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHdyYXBwZXIoY3R4LmVsZW1lbnQpO1xuICAgICAgICBpZiAocmVzdWx0ICE9PSB2b2lkIDApIHtcbiAgICAgICAgICBjdHguZWxlbWVudCA9IHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgYXBwLnJlbmRlclNldHVwQ3R4ID0gdm9pZCAwO1xuXG4gICAgICBjb25zdCByZW5kZXJlZCA9IHJlbmRlcihjdHguZWxlbWVudCwgY3R4KTtcbiAgICAgIGlmIChyZW5kZXJlZCBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgcmV0dXJuIHJlbmRlcmVkLnRoZW4oKHIpID0+IHtcbiAgICAgICAgICBjdHgucmVuZGVyZWQgPSByO1xuICAgICAgICAgIHJldHVybiBuZXh0KCk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY3R4LnJlbmRlcmVkID0gcmVuZGVyZWQ7XG4gICAgICAgIHJldHVybiBuZXh0KCk7XG4gICAgICB9XG4gICAgfTtcbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUllLFNBQVNBLHdCQUF3QixDQUFDQyxHQUFHLEVBQUU7RUFDcEQsT0FBTyxTQUFTQyxrQkFBa0IsQ0FBQztJQUFDQztFQUE0QixDQUFDLEVBQUU7SUFDakUsT0FBTyxTQUFTQyxRQUFRLENBQUNDLEdBQVksRUFBRUMsSUFBeUIsRUFBRTtNQUNoRUwsR0FBRyxDQUFDTSxjQUFjLEdBQUdGLEdBQUc7TUFDeEI7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBO01BQ0E7TUFDQSxLQUFLLElBQUlHLENBQUMsR0FBR1AsR0FBRyxDQUFDUSxXQUFXLENBQUNDLE1BQU0sR0FBRyxDQUFDLEVBQUVGLENBQUMsSUFBSSxDQUFDLEVBQUVBLENBQUMsRUFBRSxFQUFFO1FBQ3BELE1BQU1HLE9BQU8sR0FBR1YsR0FBRyxDQUFDUSxXQUFXLENBQUNELENBQUMsQ0FBQztRQUNsQyxNQUFNSSxNQUFNLEdBQUdELE9BQU8sQ0FBQ04sR0FBRyxDQUFDUSxPQUFPLENBQUM7UUFDbkMsSUFBSUQsTUFBTSxLQUFLLEtBQUssQ0FBQyxFQUFFO1VBQ3JCUCxHQUFHLENBQUNRLE9BQU8sR0FBR0QsTUFBTTtRQUN0QjtNQUNGO01BQ0FYLEdBQUcsQ0FBQ00sY0FBYyxHQUFHLEtBQUssQ0FBQztNQUUzQixNQUFNTyxRQUFRLEdBQUdYLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDUSxPQUFPLEVBQUVSLEdBQUcsQ0FBQztNQUN6QyxJQUFJUyxRQUFRLFlBQVlDLE9BQU8sRUFBRTtRQUMvQixPQUFPRCxRQUFRLENBQUNFLElBQUksQ0FBRUMsQ0FBQyxJQUFLO1VBQzFCWixHQUFHLENBQUNTLFFBQVEsR0FBR0csQ0FBQztVQUNoQixPQUFPWCxJQUFJLEVBQUU7UUFDZixDQUFDLENBQUM7TUFDSixDQUFDLE1BQU07UUFDTEQsR0FBRyxDQUFDUyxRQUFRLEdBQUdBLFFBQVE7UUFDdkIsT0FBT1IsSUFBSSxFQUFFO01BQ2Y7SUFDRixDQUFDO0VBQ0gsQ0FBQztBQUNIIn0=