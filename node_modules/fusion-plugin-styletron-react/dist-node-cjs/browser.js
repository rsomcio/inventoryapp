"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/* eslint-env browser */
/* global module */

let debugEngine;
let engine;
function getPlugin(getStyletronEngine) {
  const plugin = false && createPlugin({
    deps: {
      prefix: AtomicPrefixToken.optional
    },
    middleware: ({
      prefix
    }) => (ctx, next) => {
      if (ctx.element) {
        if (!engine) {
          const config = {
            hydrate: document.getElementsByClassName('_styletron_hydrate_')
          };
          if (prefix !== void 0) {
            config.prefix = prefix;
          }
          engine = getStyletronEngine(config);
        }
        if (process.env.NODE_ENV !== "production" && !debugEngine && typeof Worker !== 'undefined') {
          const worker = new Worker(workerRoute);
          worker.postMessage({
            id: 'init_wasm',
            url: wasmRoute
          });
          worker.postMessage({
            id: 'set_render_interval',
            interval: 180
          });
          if (module.hot) {
            module.hot.addStatusHandler(status => {
              if (status === 'dispose') {
                worker.postMessage({
                  id: 'invalidate'
                });
              }
            });
          }
          debugEngine = new DebugEngine(worker);
        }
        ctx.element = /*#__PURE__*/(0, _jsxRuntime.jsx)(StyletronProvider, {
          value: engine,
          debug: debugEngine,
          debugAfterHydration: Boolean(debugEngine),
          children: ctx.element
        });
      }
      return next();
    }
  });
  return plugin;
}
var _default = getPlugin;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZWJ1Z0VuZ2luZSIsImVuZ2luZSIsImdldFBsdWdpbiIsImdldFN0eWxldHJvbkVuZ2luZSIsInBsdWdpbiIsImNyZWF0ZVBsdWdpbiIsImRlcHMiLCJwcmVmaXgiLCJBdG9taWNQcmVmaXhUb2tlbiIsIm9wdGlvbmFsIiwibWlkZGxld2FyZSIsImN0eCIsIm5leHQiLCJlbGVtZW50IiwiY29uZmlnIiwiaHlkcmF0ZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsIldvcmtlciIsIndvcmtlciIsIndvcmtlclJvdXRlIiwicG9zdE1lc3NhZ2UiLCJpZCIsInVybCIsIndhc21Sb3V0ZSIsImludGVydmFsIiwibW9kdWxlIiwiaG90IiwiYWRkU3RhdHVzSGFuZGxlciIsInN0YXR1cyIsIkRlYnVnRW5naW5lIiwiQm9vbGVhbiJdLCJzb3VyY2VzIjpbInNyYy9icm93c2VyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQ29weXJpZ2h0IChjKSAyMDE4IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbi8qIGVzbGludC1lbnYgYnJvd3NlciAqL1xuLyogZ2xvYmFsIG1vZHVsZSAqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtjcmVhdGVQbHVnaW59IGZyb20gJ2Z1c2lvbi1jb3JlJztcblxuaW1wb3J0IHtQcm92aWRlciBhcyBTdHlsZXRyb25Qcm92aWRlciwgRGVidWdFbmdpbmV9IGZyb20gJ3N0eWxldHJvbi1yZWFjdCc7XG5cbmltcG9ydCB7d29ya2VyUm91dGUsIHdhc21Sb3V0ZSwgQXRvbWljUHJlZml4VG9rZW59IGZyb20gJy4vY29uc3RhbnRzJztcblxubGV0IGRlYnVnRW5naW5lO1xubGV0IGVuZ2luZTtcblxuZnVuY3Rpb24gZ2V0UGx1Z2luKGdldFN0eWxldHJvbkVuZ2luZTogYW55KTogYW55IHtcbiAgY29uc3QgcGx1Z2luID1cbiAgICBfX0JST1dTRVJfXyAmJlxuICAgIGNyZWF0ZVBsdWdpbih7XG4gICAgICBkZXBzOiB7XG4gICAgICAgIHByZWZpeDogQXRvbWljUHJlZml4VG9rZW4ub3B0aW9uYWwsXG4gICAgICB9LFxuICAgICAgbWlkZGxld2FyZTpcbiAgICAgICAgKHtwcmVmaXh9KSA9PlxuICAgICAgICAoY3R4LCBuZXh0KSA9PiB7XG4gICAgICAgICAgaWYgKGN0eC5lbGVtZW50KSB7XG4gICAgICAgICAgICBpZiAoIWVuZ2luZSkge1xuICAgICAgICAgICAgICBjb25zdCBjb25maWc6IHtcbiAgICAgICAgICAgICAgICBoeWRyYXRlOiBIVE1MQ29sbGVjdGlvbjtcbiAgICAgICAgICAgICAgICBwcmVmaXg/OiBzdHJpbmc7XG4gICAgICAgICAgICAgIH0gPSB7XG4gICAgICAgICAgICAgICAgaHlkcmF0ZTogZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnX3N0eWxldHJvbl9oeWRyYXRlXycpLFxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBpZiAocHJlZml4ICE9PSB2b2lkIDApIHtcbiAgICAgICAgICAgICAgICBjb25maWcucHJlZml4ID0gcHJlZml4O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGVuZ2luZSA9IGdldFN0eWxldHJvbkVuZ2luZShjb25maWcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKF9fREVWX18gJiYgIWRlYnVnRW5naW5lICYmIHR5cGVvZiBXb3JrZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHdvcmtlciA9IG5ldyBXb3JrZXIod29ya2VyUm91dGUpO1xuICAgICAgICAgICAgICB3b3JrZXIucG9zdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICAgIGlkOiAnaW5pdF93YXNtJyxcbiAgICAgICAgICAgICAgICB1cmw6IHdhc21Sb3V0ZSxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIHdvcmtlci5wb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgaWQ6ICdzZXRfcmVuZGVyX2ludGVydmFsJyxcbiAgICAgICAgICAgICAgICBpbnRlcnZhbDogMTgwLFxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgaWYgKChtb2R1bGUgYXMgYW55KS5ob3QpIHtcbiAgICAgICAgICAgICAgICAobW9kdWxlIGFzIGFueSkuaG90LmFkZFN0YXR1c0hhbmRsZXIoKHN0YXR1cykgPT4ge1xuICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gJ2Rpc3Bvc2UnKSB7XG4gICAgICAgICAgICAgICAgICAgIHdvcmtlci5wb3N0TWVzc2FnZSh7aWQ6ICdpbnZhbGlkYXRlJ30pO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGRlYnVnRW5naW5lID0gbmV3IERlYnVnRW5naW5lKHdvcmtlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjdHguZWxlbWVudCA9IChcbiAgICAgICAgICAgICAgPFN0eWxldHJvblByb3ZpZGVyXG4gICAgICAgICAgICAgICAgdmFsdWU9e2VuZ2luZX1cbiAgICAgICAgICAgICAgICBkZWJ1Zz17ZGVidWdFbmdpbmV9XG4gICAgICAgICAgICAgICAgZGVidWdBZnRlckh5ZHJhdGlvbj17Qm9vbGVhbihkZWJ1Z0VuZ2luZSl9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7Y3R4LmVsZW1lbnR9XG4gICAgICAgICAgICAgIDwvU3R5bGV0cm9uUHJvdmlkZXI+XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBuZXh0KCk7XG4gICAgICAgIH0sXG4gICAgfSk7XG4gIHJldHVybiBwbHVnaW47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldFBsdWdpbjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBVUE7QUFBMEI7QUFBQTtBQVYxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFTQSxJQUFJQSxXQUFXO0FBQ2YsSUFBSUMsTUFBTTtBQUVWLFNBQVNDLFNBQVMsQ0FBQ0Msa0JBQXVCLEVBQU87RUFDL0MsTUFBTUMsTUFBTSxHQUNWLFNBQ0FDLFlBQVksQ0FBQztJQUNYQyxJQUFJLEVBQUU7TUFDSkMsTUFBTSxFQUFFQyxpQkFBaUIsQ0FBQ0M7SUFDNUIsQ0FBQztJQUNEQyxVQUFVLEVBQ1IsQ0FBQztNQUFDSDtJQUFNLENBQUMsS0FDVCxDQUFDSSxHQUFHLEVBQUVDLElBQUksS0FBSztNQUNiLElBQUlELEdBQUcsQ0FBQ0UsT0FBTyxFQUFFO1FBQ2YsSUFBSSxDQUFDWixNQUFNLEVBQUU7VUFDWCxNQUFNYSxNQUdMLEdBQUc7WUFDRkMsT0FBTyxFQUFFQyxRQUFRLENBQUNDLHNCQUFzQixDQUFDLHFCQUFxQjtVQUNoRSxDQUFDO1VBQ0QsSUFBSVYsTUFBTSxLQUFLLEtBQUssQ0FBQyxFQUFFO1lBQ3JCTyxNQUFNLENBQUNQLE1BQU0sR0FBR0EsTUFBTTtVQUN4QjtVQUNBTixNQUFNLEdBQUdFLGtCQUFrQixDQUFDVyxNQUFNLENBQUM7UUFDckM7UUFDQSxJQUFJLHlDQUFXLENBQUNkLFdBQVcsSUFBSSxPQUFPa0IsTUFBTSxLQUFLLFdBQVcsRUFBRTtVQUM1RCxNQUFNQyxNQUFNLEdBQUcsSUFBSUQsTUFBTSxDQUFDRSxXQUFXLENBQUM7VUFDdENELE1BQU0sQ0FBQ0UsV0FBVyxDQUFDO1lBQ2pCQyxFQUFFLEVBQUUsV0FBVztZQUNmQyxHQUFHLEVBQUVDO1VBQ1AsQ0FBQyxDQUFDO1VBQ0ZMLE1BQU0sQ0FBQ0UsV0FBVyxDQUFDO1lBQ2pCQyxFQUFFLEVBQUUscUJBQXFCO1lBQ3pCRyxRQUFRLEVBQUU7VUFDWixDQUFDLENBQUM7VUFDRixJQUFLQyxNQUFNLENBQVNDLEdBQUcsRUFBRTtZQUN0QkQsTUFBTSxDQUFTQyxHQUFHLENBQUNDLGdCQUFnQixDQUFFQyxNQUFNLElBQUs7Y0FDL0MsSUFBSUEsTUFBTSxLQUFLLFNBQVMsRUFBRTtnQkFDeEJWLE1BQU0sQ0FBQ0UsV0FBVyxDQUFDO2tCQUFDQyxFQUFFLEVBQUU7Z0JBQVksQ0FBQyxDQUFDO2NBQ3hDO1lBQ0YsQ0FBQyxDQUFDO1VBQ0o7VUFDQXRCLFdBQVcsR0FBRyxJQUFJOEIsV0FBVyxDQUFDWCxNQUFNLENBQUM7UUFDdkM7UUFDQVIsR0FBRyxDQUFDRSxPQUFPLGdCQUNULHFCQUFDLGlCQUFpQjtVQUNoQixLQUFLLEVBQUVaLE1BQU87VUFDZCxLQUFLLEVBQUVELFdBQVk7VUFDbkIsbUJBQW1CLEVBQUUrQixPQUFPLENBQUMvQixXQUFXLENBQUU7VUFBQSxVQUV6Q1csR0FBRyxDQUFDRTtRQUFPLEVBRWY7TUFDSDtNQUVBLE9BQU9ELElBQUksRUFBRTtJQUNmO0VBQ0osQ0FBQyxDQUFDO0VBQ0osT0FBT1IsTUFBTTtBQUNmO0FBQUMsZUFFY0YsU0FBUztBQUFBIn0=