/* eslint-env node, browser */

export function getStyles(page) {
  return page.evaluate(() => {
    return Array.from(document.styleSheets).flatMap(sheet => Array.from(sheet.cssRules).flatMap(rule => rule.cssText));
  });
}
export function getComputedStyle(page, selector) {
  return page.$eval(selector, el => JSON.parse(JSON.stringify(getComputedStyle(el))));
}
export async function untilReady(page, port) {
  let started = false;
  let numTries = 0;
  while (!started && numTries < 10) {
    try {
      await page.goto(`http://localhost:${port}`);
      started = true;
    } catch (e) {
      numTries++;
      await new Promise(resolve => {
        setTimeout(resolve, Math.pow(2, numTries));
      });
    }
  }
  if (!started) {
    throw new Error('Failed to start');
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRTdHlsZXMiLCJwYWdlIiwiZXZhbHVhdGUiLCJBcnJheSIsImZyb20iLCJkb2N1bWVudCIsInN0eWxlU2hlZXRzIiwiZmxhdE1hcCIsInNoZWV0IiwiY3NzUnVsZXMiLCJydWxlIiwiY3NzVGV4dCIsImdldENvbXB1dGVkU3R5bGUiLCJzZWxlY3RvciIsIiRldmFsIiwiZWwiLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiLCJ1bnRpbFJlYWR5IiwicG9ydCIsInN0YXJ0ZWQiLCJudW1UcmllcyIsImdvdG8iLCJlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0IiwiTWF0aCIsInBvdyIsIkVycm9yIl0sInNvdXJjZXMiOlsic3JjL3Rlc3QvdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBub2RlLCBicm93c2VyICovXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdHlsZXMocGFnZSkge1xuICByZXR1cm4gcGFnZS5ldmFsdWF0ZSgoKSA9PiB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20oZG9jdW1lbnQuc3R5bGVTaGVldHMpLmZsYXRNYXAoKHNoZWV0KSA9PlxuICAgICAgQXJyYXkuZnJvbShzaGVldC5jc3NSdWxlcykuZmxhdE1hcCgocnVsZSkgPT4gcnVsZS5jc3NUZXh0KVxuICAgICk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29tcHV0ZWRTdHlsZShwYWdlLCBzZWxlY3Rvcj8pIHtcbiAgcmV0dXJuIHBhZ2UuJGV2YWwoc2VsZWN0b3IsIChlbCkgPT5cbiAgICBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGdldENvbXB1dGVkU3R5bGUoZWwpKSlcbiAgKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVudGlsUmVhZHkocGFnZSwgcG9ydCkge1xuICBsZXQgc3RhcnRlZCA9IGZhbHNlO1xuICBsZXQgbnVtVHJpZXMgPSAwO1xuICB3aGlsZSAoIXN0YXJ0ZWQgJiYgbnVtVHJpZXMgPCAxMCkge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBwYWdlLmdvdG8oYGh0dHA6Ly9sb2NhbGhvc3Q6JHtwb3J0fWApO1xuICAgICAgc3RhcnRlZCA9IHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgbnVtVHJpZXMrKztcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQocmVzb2x2ZSwgTWF0aC5wb3coMiwgbnVtVHJpZXMpKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGlmICghc3RhcnRlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIHN0YXJ0Jyk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsT0FBTyxTQUFTQSxTQUFTLENBQUNDLElBQUksRUFBRTtFQUM5QixPQUFPQSxJQUFJLENBQUNDLFFBQVEsQ0FBQyxNQUFNO0lBQ3pCLE9BQU9DLEtBQUssQ0FBQ0MsSUFBSSxDQUFDQyxRQUFRLENBQUNDLFdBQVcsQ0FBQyxDQUFDQyxPQUFPLENBQUVDLEtBQUssSUFDcERMLEtBQUssQ0FBQ0MsSUFBSSxDQUFDSSxLQUFLLENBQUNDLFFBQVEsQ0FBQyxDQUFDRixPQUFPLENBQUVHLElBQUksSUFBS0EsSUFBSSxDQUFDQyxPQUFPLENBQUMsQ0FDM0Q7RUFDSCxDQUFDLENBQUM7QUFDSjtBQUVBLE9BQU8sU0FBU0MsZ0JBQWdCLENBQUNYLElBQUksRUFBRVksUUFBUyxFQUFFO0VBQ2hELE9BQU9aLElBQUksQ0FBQ2EsS0FBSyxDQUFDRCxRQUFRLEVBQUdFLEVBQUUsSUFDN0JDLElBQUksQ0FBQ0MsS0FBSyxDQUFDRCxJQUFJLENBQUNFLFNBQVMsQ0FBQ04sZ0JBQWdCLENBQUNHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FDakQ7QUFDSDtBQUVBLE9BQU8sZUFBZUksVUFBVSxDQUFDbEIsSUFBSSxFQUFFbUIsSUFBSSxFQUFFO0VBQzNDLElBQUlDLE9BQU8sR0FBRyxLQUFLO0VBQ25CLElBQUlDLFFBQVEsR0FBRyxDQUFDO0VBQ2hCLE9BQU8sQ0FBQ0QsT0FBTyxJQUFJQyxRQUFRLEdBQUcsRUFBRSxFQUFFO0lBQ2hDLElBQUk7TUFDRixNQUFNckIsSUFBSSxDQUFDc0IsSUFBSSxDQUFFLG9CQUFtQkgsSUFBSyxFQUFDLENBQUM7TUFDM0NDLE9BQU8sR0FBRyxJQUFJO0lBQ2hCLENBQUMsQ0FBQyxPQUFPRyxDQUFDLEVBQUU7TUFDVkYsUUFBUSxFQUFFO01BQ1YsTUFBTSxJQUFJRyxPQUFPLENBQUVDLE9BQU8sSUFBSztRQUM3QkMsVUFBVSxDQUFDRCxPQUFPLEVBQUVFLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUMsRUFBRVAsUUFBUSxDQUFDLENBQUM7TUFDNUMsQ0FBQyxDQUFDO0lBQ0o7RUFDRjtFQUVBLElBQUksQ0FBQ0QsT0FBTyxFQUFFO0lBQ1osTUFBTSxJQUFJUyxLQUFLLENBQUMsaUJBQWlCLENBQUM7RUFDcEM7QUFDRiJ9