"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "RouterProviderToken", {
  enumerable: true,
  get: function () {
    return _plugin.RouterProviderToken;
  }
});
Object.defineProperty(exports, "RouterToken", {
  enumerable: true,
  get: function () {
    return _plugin.RouterToken;
  }
});
Object.defineProperty(exports, "GetStaticContextToken", {
  enumerable: true,
  get: function () {
    return _plugin.GetStaticContextToken;
  }
});
exports.useParams = exports.useLocation = exports.useRouteMatch = exports.useHistory = exports.Status = exports.Redirect = exports.NotFound = exports.withRouter = exports.Switch = exports.Router = exports.Route = exports.Prompt = exports.NavLink = exports.MemoryRouter = exports.matchPath = exports.Link = exports.HashRouter = exports.BrowserRouter = exports.default = void 0;

var _plugin = _interopRequireWildcard(require("./plugin"));

var server = _interopRequireWildcard(require("./server"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
var _default = _plugin.default;
exports.default = _default;
const BrowserRouter = false ? browser.BrowserRouter : server.BrowserRouter;
exports.BrowserRouter = BrowserRouter;
const HashRouter = false ? browser.HashRouter : server.HashRouter;
exports.HashRouter = HashRouter;
const Link = false ? browser.Link : server.Link;
exports.Link = Link;
const matchPath = false ? browser.matchPath : server.matchPath;
exports.matchPath = matchPath;
const MemoryRouter = false ? browser.MemoryRouter : server.MemoryRouter;
exports.MemoryRouter = MemoryRouter;
const NavLink = false ? browser.NavLink : server.NavLink;
exports.NavLink = NavLink;
const Prompt = false ? browser.Prompt : server.Prompt;
exports.Prompt = Prompt;
const Route = false ? browser.Route : server.Route;
exports.Route = Route;
const Router = false ? browser.Router : server.Router;
exports.Router = Router;
const Switch = false ? browser.Switch : server.Switch;
exports.Switch = Switch;
const withRouter = false ? browser.withRouter : server.withRouter;
exports.withRouter = withRouter;
const NotFound = false ? browser.NotFound : server.NotFound;
exports.NotFound = NotFound;
const Redirect = false ? browser.Redirect : server.Redirect;
exports.Redirect = Redirect;
const Status = false ? browser.Status : server.Status;
exports.Status = Status;
const useHistory = false ? browser.useHistory : server.useHistory;
exports.useHistory = useHistory;
const useRouteMatch = false ? browser.useRouteMatch : server.useRouteMatch;
exports.useRouteMatch = useRouteMatch;
const useLocation = false ? browser.useLocation : server.useLocation;
exports.useLocation = useLocation;
const useParams = false ? browser.useParams : server.useParams;
exports.useParams = useParams;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJwbHVnaW4iLCJCcm93c2VyUm91dGVyIiwiYnJvd3NlciIsInNlcnZlciIsIkhhc2hSb3V0ZXIiLCJMaW5rIiwibWF0Y2hQYXRoIiwiTWVtb3J5Um91dGVyIiwiTmF2TGluayIsIlByb21wdCIsIlJvdXRlIiwiUm91dGVyIiwiU3dpdGNoIiwid2l0aFJvdXRlciIsIk5vdEZvdW5kIiwiUmVkaXJlY3QiLCJTdGF0dXMiLCJ1c2VIaXN0b3J5IiwidXNlUm91dGVNYXRjaCIsInVzZUxvY2F0aW9uIiwidXNlUGFyYW1zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUUE7O0FBS0E7Ozs7OztBQWJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO2VBY2VBLGU7O0FBSVIsTUFBTUMsYUFBYSxHQUFHLFFBQ3pCQyxPQUFPLENBQUNELGFBRGlCLEdBRXpCRSxNQUFNLENBQUNGLGFBRko7O0FBR0EsTUFBTUcsVUFBVSxHQUFHLFFBQWNGLE9BQU8sQ0FBQ0UsVUFBdEIsR0FBbUNELE1BQU0sQ0FBQ0MsVUFBN0Q7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHLFFBQWNILE9BQU8sQ0FBQ0csSUFBdEIsR0FBNkJGLE1BQU0sQ0FBQ0UsSUFBakQ7O0FBQ0EsTUFBTUMsU0FBUyxHQUFHLFFBQWNKLE9BQU8sQ0FBQ0ksU0FBdEIsR0FBa0NILE1BQU0sQ0FBQ0csU0FBM0Q7O0FBQ0EsTUFBTUMsWUFBWSxHQUFHLFFBQ3hCTCxPQUFPLENBQUNLLFlBRGdCLEdBRXhCSixNQUFNLENBQUNJLFlBRko7O0FBR0EsTUFBTUMsT0FBTyxHQUFHLFFBQWNOLE9BQU8sQ0FBQ00sT0FBdEIsR0FBZ0NMLE1BQU0sQ0FBQ0ssT0FBdkQ7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHLFFBQWNQLE9BQU8sQ0FBQ08sTUFBdEIsR0FBK0JOLE1BQU0sQ0FBQ00sTUFBckQ7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHLFFBQWNSLE9BQU8sQ0FBQ1EsS0FBdEIsR0FBOEJQLE1BQU0sQ0FBQ08sS0FBbkQ7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHLFFBQWNULE9BQU8sQ0FBQ1MsTUFBdEIsR0FBK0JSLE1BQU0sQ0FBQ1EsTUFBckQ7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHLFFBQWNWLE9BQU8sQ0FBQ1UsTUFBdEIsR0FBK0JULE1BQU0sQ0FBQ1MsTUFBckQ7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHLFFBQWNYLE9BQU8sQ0FBQ1csVUFBdEIsR0FBbUNWLE1BQU0sQ0FBQ1UsVUFBN0Q7O0FBQ0EsTUFBTUMsUUFBUSxHQUFHLFFBQWNaLE9BQU8sQ0FBQ1ksUUFBdEIsR0FBaUNYLE1BQU0sQ0FBQ1csUUFBekQ7O0FBQ0EsTUFBTUMsUUFBUSxHQUFHLFFBQWNiLE9BQU8sQ0FBQ2EsUUFBdEIsR0FBaUNaLE1BQU0sQ0FBQ1ksUUFBekQ7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHLFFBQWNkLE9BQU8sQ0FBQ2MsTUFBdEIsR0FBK0JiLE1BQU0sQ0FBQ2EsTUFBckQ7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHLFFBQWNmLE9BQU8sQ0FBQ2UsVUFBdEIsR0FBbUNkLE1BQU0sQ0FBQ2MsVUFBN0Q7O0FBQ0EsTUFBTUMsYUFBYSxHQUFHLFFBQ3pCaEIsT0FBTyxDQUFDZ0IsYUFEaUIsR0FFekJmLE1BQU0sQ0FBQ2UsYUFGSjs7QUFHQSxNQUFNQyxXQUFXLEdBQUcsUUFDdkJqQixPQUFPLENBQUNpQixXQURlLEdBRXZCaEIsTUFBTSxDQUFDZ0IsV0FGSjs7QUFHQSxNQUFNQyxTQUFTLEdBQUcsUUFBY2xCLE9BQU8sQ0FBQ2tCLFNBQXRCLEdBQWtDakIsTUFBTSxDQUFDaUIsU0FBM0QiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQ29weXJpZ2h0IChjKSAyMDE4IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqL1xuXG5pbXBvcnQgcGx1Z2luLCB7XG4gIFJvdXRlclByb3ZpZGVyVG9rZW4sXG4gIFJvdXRlclRva2VuLFxuICBHZXRTdGF0aWNDb250ZXh0VG9rZW4sXG59IGZyb20gJy4vcGx1Z2luJztcbmltcG9ydCAqIGFzIHNlcnZlciBmcm9tICcuL3NlcnZlcic7XG5pbXBvcnQgKiBhcyBicm93c2VyIGZyb20gJy4vYnJvd3Nlcic7XG5cbmV4cG9ydCB0eXBlICogZnJvbSAnLi90eXBlcy5qcyc7XG5cbmRlY2xhcmUgdmFyIF9fQlJPV1NFUl9fOiBCb29sZWFuO1xuXG5leHBvcnQgZGVmYXVsdCBwbHVnaW47XG5cbmV4cG9ydCB7Um91dGVyUHJvdmlkZXJUb2tlbiwgUm91dGVyVG9rZW4sIEdldFN0YXRpY0NvbnRleHRUb2tlbn07XG5cbmV4cG9ydCBjb25zdCBCcm93c2VyUm91dGVyID0gX19CUk9XU0VSX19cbiAgPyBicm93c2VyLkJyb3dzZXJSb3V0ZXJcbiAgOiBzZXJ2ZXIuQnJvd3NlclJvdXRlcjtcbmV4cG9ydCBjb25zdCBIYXNoUm91dGVyID0gX19CUk9XU0VSX18gPyBicm93c2VyLkhhc2hSb3V0ZXIgOiBzZXJ2ZXIuSGFzaFJvdXRlcjtcbmV4cG9ydCBjb25zdCBMaW5rID0gX19CUk9XU0VSX18gPyBicm93c2VyLkxpbmsgOiBzZXJ2ZXIuTGluaztcbmV4cG9ydCBjb25zdCBtYXRjaFBhdGggPSBfX0JST1dTRVJfXyA/IGJyb3dzZXIubWF0Y2hQYXRoIDogc2VydmVyLm1hdGNoUGF0aDtcbmV4cG9ydCBjb25zdCBNZW1vcnlSb3V0ZXIgPSBfX0JST1dTRVJfX1xuICA/IGJyb3dzZXIuTWVtb3J5Um91dGVyXG4gIDogc2VydmVyLk1lbW9yeVJvdXRlcjtcbmV4cG9ydCBjb25zdCBOYXZMaW5rID0gX19CUk9XU0VSX18gPyBicm93c2VyLk5hdkxpbmsgOiBzZXJ2ZXIuTmF2TGluaztcbmV4cG9ydCBjb25zdCBQcm9tcHQgPSBfX0JST1dTRVJfXyA/IGJyb3dzZXIuUHJvbXB0IDogc2VydmVyLlByb21wdDtcbmV4cG9ydCBjb25zdCBSb3V0ZSA9IF9fQlJPV1NFUl9fID8gYnJvd3Nlci5Sb3V0ZSA6IHNlcnZlci5Sb3V0ZTtcbmV4cG9ydCBjb25zdCBSb3V0ZXIgPSBfX0JST1dTRVJfXyA/IGJyb3dzZXIuUm91dGVyIDogc2VydmVyLlJvdXRlcjtcbmV4cG9ydCBjb25zdCBTd2l0Y2ggPSBfX0JST1dTRVJfXyA/IGJyb3dzZXIuU3dpdGNoIDogc2VydmVyLlN3aXRjaDtcbmV4cG9ydCBjb25zdCB3aXRoUm91dGVyID0gX19CUk9XU0VSX18gPyBicm93c2VyLndpdGhSb3V0ZXIgOiBzZXJ2ZXIud2l0aFJvdXRlcjtcbmV4cG9ydCBjb25zdCBOb3RGb3VuZCA9IF9fQlJPV1NFUl9fID8gYnJvd3Nlci5Ob3RGb3VuZCA6IHNlcnZlci5Ob3RGb3VuZDtcbmV4cG9ydCBjb25zdCBSZWRpcmVjdCA9IF9fQlJPV1NFUl9fID8gYnJvd3Nlci5SZWRpcmVjdCA6IHNlcnZlci5SZWRpcmVjdDtcbmV4cG9ydCBjb25zdCBTdGF0dXMgPSBfX0JST1dTRVJfXyA/IGJyb3dzZXIuU3RhdHVzIDogc2VydmVyLlN0YXR1cztcbmV4cG9ydCBjb25zdCB1c2VIaXN0b3J5ID0gX19CUk9XU0VSX18gPyBicm93c2VyLnVzZUhpc3RvcnkgOiBzZXJ2ZXIudXNlSGlzdG9yeTtcbmV4cG9ydCBjb25zdCB1c2VSb3V0ZU1hdGNoID0gX19CUk9XU0VSX19cbiAgPyBicm93c2VyLnVzZVJvdXRlTWF0Y2hcbiAgOiBzZXJ2ZXIudXNlUm91dGVNYXRjaDtcbmV4cG9ydCBjb25zdCB1c2VMb2NhdGlvbiA9IF9fQlJPV1NFUl9fXG4gID8gYnJvd3Nlci51c2VMb2NhdGlvblxuICA6IHNlcnZlci51c2VMb2NhdGlvbjtcbmV4cG9ydCBjb25zdCB1c2VQYXJhbXMgPSBfX0JST1dTRVJfXyA/IGJyb3dzZXIudXNlUGFyYW1zIDogc2VydmVyLnVzZVBhcmFtcztcbiJdfQ==