"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Route = Route;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
const ReactRouterRoute = _reactRouterDom.Route;

const isEmptyChildren = children => React.Children.count(children) === 0;

function Route(props, context) {
  const {
    trackingId,
    component,
    render,
    children,
    ...remainingProps
  } = props;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(ReactRouterRoute, { ...remainingProps,
    // eslint-disable-next-line react/no-children-prop
    children: routeProps => {
      const {
        match
      } = routeProps;

      if (match && match.isExact) {
        if (typeof context.onRoute === 'function') {
          context.onRoute({
            page: match.path,
            title: trackingId || match.path,
            params: match.params
          });
        }
      }

      if (component) return match ? /*#__PURE__*/React.createElement(component, routeProps) : null;
      if (render) return match ? render(routeProps) : null;
      if (typeof children === 'function') return children(routeProps);
      if (children && !isEmptyChildren(children)) return children;
      return null;
    }
  });
}

Route.contextTypes = {
  onRoute: _propTypes.default.func
};
Route.displayName = 'FusionRoute';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL1JvdXRlLmpzIl0sIm5hbWVzIjpbIlJlYWN0Um91dGVyUm91dGUiLCJSZWFjdFJvdXRlclJvdXRlVW50eXBlZCIsImlzRW1wdHlDaGlsZHJlbiIsImNoaWxkcmVuIiwiUmVhY3QiLCJDaGlsZHJlbiIsImNvdW50IiwiUm91dGUiLCJwcm9wcyIsImNvbnRleHQiLCJ0cmFja2luZ0lkIiwiY29tcG9uZW50IiwicmVuZGVyIiwicmVtYWluaW5nUHJvcHMiLCJyb3V0ZVByb3BzIiwibWF0Y2giLCJpc0V4YWN0Iiwib25Sb3V0ZSIsInBhZ2UiLCJwYXRoIiwidGl0bGUiLCJwYXJhbXMiLCJjcmVhdGVFbGVtZW50IiwiY29udGV4dFR5cGVzIiwiUHJvcFR5cGVzIiwiZnVuYyIsImRpc3BsYXlOYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBUUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7QUFWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBLE1BQU1BLGdCQUEyQixHQUFHQyxxQkFBcEM7O0FBRUEsTUFBTUMsZUFBZSxHQUFJQyxRQUFELElBQ3RCQyxLQUFLLENBQUNDLFFBQU4sQ0FBZUMsS0FBZixDQUFxQkgsUUFBckIsTUFBbUMsQ0FEckM7O0FBWUEsU0FBU0ksS0FBVCxDQUFlQyxLQUFmLEVBQWlDQyxPQUFqQyxFQUF1RDtBQUNyRCxRQUFNO0FBQUNDLElBQUFBLFVBQUQ7QUFBYUMsSUFBQUEsU0FBYjtBQUF3QkMsSUFBQUEsTUFBeEI7QUFBZ0NULElBQUFBLFFBQWhDO0FBQTBDLE9BQUdVO0FBQTdDLE1BQStETCxLQUFyRTtBQUVBLHNCQUNFLHFCQUFDLGdCQUFELE9BQ01LLGNBRE47QUFFRTtBQUNBLElBQUEsUUFBUSxFQUFHQyxVQUFELElBQW1DO0FBQzNDLFlBQU07QUFBQ0MsUUFBQUE7QUFBRCxVQUFVRCxVQUFoQjs7QUFDQSxVQUFJQyxLQUFLLElBQUlBLEtBQUssQ0FBQ0MsT0FBbkIsRUFBNEI7QUFDMUIsWUFBSSxPQUFPUCxPQUFPLENBQUNRLE9BQWYsS0FBMkIsVUFBL0IsRUFBMkM7QUFDekNSLFVBQUFBLE9BQU8sQ0FBQ1EsT0FBUixDQUFnQjtBQUNkQyxZQUFBQSxJQUFJLEVBQUVILEtBQUssQ0FBQ0ksSUFERTtBQUVkQyxZQUFBQSxLQUFLLEVBQUVWLFVBQVUsSUFBSUssS0FBSyxDQUFDSSxJQUZiO0FBR2RFLFlBQUFBLE1BQU0sRUFBRU4sS0FBSyxDQUFDTTtBQUhBLFdBQWhCO0FBS0Q7QUFDRjs7QUFFRCxVQUFJVixTQUFKLEVBQ0UsT0FBT0ksS0FBSyxnQkFBR1gsS0FBSyxDQUFDa0IsYUFBTixDQUFvQlgsU0FBcEIsRUFBK0JHLFVBQS9CLENBQUgsR0FBZ0QsSUFBNUQ7QUFFRixVQUFJRixNQUFKLEVBQVksT0FBT0csS0FBSyxHQUFHSCxNQUFNLENBQUNFLFVBQUQsQ0FBVCxHQUF3QixJQUFwQztBQUVaLFVBQUksT0FBT1gsUUFBUCxLQUFvQixVQUF4QixFQUFvQyxPQUFPQSxRQUFRLENBQUNXLFVBQUQsQ0FBZjtBQUVwQyxVQUFJWCxRQUFRLElBQUksQ0FBQ0QsZUFBZSxDQUFDQyxRQUFELENBQWhDLEVBQTRDLE9BQU9BLFFBQVA7QUFFNUMsYUFBTyxJQUFQO0FBQ0Q7QUF6QkgsSUFERjtBQTZCRDs7QUFFREksS0FBSyxDQUFDZ0IsWUFBTixHQUFxQjtBQUNuQk4sRUFBQUEsT0FBTyxFQUFFTyxtQkFBVUM7QUFEQSxDQUFyQjtBQUlBbEIsS0FBSyxDQUFDbUIsV0FBTixHQUFvQixhQUFwQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBDb3B5cmlnaHQgKGMpIDIwMTggVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICovXG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQge1JvdXRlIGFzIFJlYWN0Um91dGVyUm91dGVVbnR5cGVkfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuaW1wb3J0IHR5cGUge0NvbnRleHRSb3V0ZXJUeXBlLCBSb3V0ZVR5cGV9IGZyb20gJy4uL3R5cGVzLmpzJztcblxuY29uc3QgUmVhY3RSb3V0ZXJSb3V0ZTogUm91dGVUeXBlID0gUmVhY3RSb3V0ZXJSb3V0ZVVudHlwZWQ7XG5cbmNvbnN0IGlzRW1wdHlDaGlsZHJlbiA9IChjaGlsZHJlbjogUmVhY3QuTm9kZSkgPT5cbiAgUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xuXG50eXBlIFByb3BzVHlwZSA9IHtcbiAgdHJhY2tpbmdJZD86IGFueSxcbiAgY29tcG9uZW50PzogUmVhY3QuQ29tcG9uZW50VHlwZTwqPixcbiAgcmVuZGVyPzogKHJvdXRlUHJvcHM6IENvbnRleHRSb3V0ZXJUeXBlKSA9PiBSZWFjdC5Ob2RlLFxuICBjaGlsZHJlbj86ICgocm91dGVQcm9wczogQ29udGV4dFJvdXRlclR5cGUpID0+IFJlYWN0Lk5vZGUpIHwgUmVhY3QuTm9kZSxcbn07XG50eXBlIENvbnRleHRUeXBlID0ge1xuICBvblJvdXRlOiBhbnksXG59O1xuZnVuY3Rpb24gUm91dGUocHJvcHM6IFByb3BzVHlwZSwgY29udGV4dDogQ29udGV4dFR5cGUpIHtcbiAgY29uc3Qge3RyYWNraW5nSWQsIGNvbXBvbmVudCwgcmVuZGVyLCBjaGlsZHJlbiwgLi4ucmVtYWluaW5nUHJvcHN9ID0gcHJvcHM7XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3RSb3V0ZXJSb3V0ZVxuICAgICAgey4uLnJlbWFpbmluZ1Byb3BzfVxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWNoaWxkcmVuLXByb3BcbiAgICAgIGNoaWxkcmVuPXsocm91dGVQcm9wczogQ29udGV4dFJvdXRlclR5cGUpID0+IHtcbiAgICAgICAgY29uc3Qge21hdGNofSA9IHJvdXRlUHJvcHM7XG4gICAgICAgIGlmIChtYXRjaCAmJiBtYXRjaC5pc0V4YWN0KSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBjb250ZXh0Lm9uUm91dGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNvbnRleHQub25Sb3V0ZSh7XG4gICAgICAgICAgICAgIHBhZ2U6IG1hdGNoLnBhdGgsXG4gICAgICAgICAgICAgIHRpdGxlOiB0cmFja2luZ0lkIHx8IG1hdGNoLnBhdGgsXG4gICAgICAgICAgICAgIHBhcmFtczogbWF0Y2gucGFyYW1zLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbXBvbmVudClcbiAgICAgICAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcm91dGVQcm9wcykgOiBudWxsO1xuXG4gICAgICAgIGlmIChyZW5kZXIpIHJldHVybiBtYXRjaCA/IHJlbmRlcihyb3V0ZVByb3BzKSA6IG51bGw7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGNoaWxkcmVuKHJvdXRlUHJvcHMpO1xuXG4gICAgICAgIGlmIChjaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSkgcmV0dXJuIGNoaWxkcmVuO1xuXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfX1cbiAgICAvPlxuICApO1xufVxuXG5Sb3V0ZS5jb250ZXh0VHlwZXMgPSB7XG4gIG9uUm91dGU6IFByb3BUeXBlcy5mdW5jLFxufTtcblxuUm91dGUuZGlzcGxheU5hbWUgPSAnRnVzaW9uUm91dGUnO1xuXG5leHBvcnQge1JvdXRlfTtcbiJdfQ==