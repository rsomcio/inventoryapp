/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
import * as React from 'react';
import PropTypes from 'prop-types';
import { Route as ReactRouterRouteUntyped } from 'react-router-dom';
import { jsx as _jsx } from "react/jsx-runtime";
const ReactRouterRoute = ReactRouterRouteUntyped;

const isEmptyChildren = children => React.Children.count(children) === 0;

function Route(props, context) {
  const {
    trackingId,
    component,
    render,
    children,
    ...remainingProps
  } = props;
  return /*#__PURE__*/_jsx(ReactRouterRoute, { ...remainingProps,
    // eslint-disable-next-line react/no-children-prop
    children: routeProps => {
      const {
        match
      } = routeProps;

      if (match && match.isExact) {
        if (typeof context.onRoute === 'function') {
          context.onRoute({
            page: match.path,
            title: trackingId || match.path,
            params: match.params
          });
        }
      }

      if (component) return match ? /*#__PURE__*/React.createElement(component, routeProps) : null;
      if (render) return match ? render(routeProps) : null;
      if (typeof children === 'function') return children(routeProps);
      if (children && !isEmptyChildren(children)) return children;
      return null;
    }
  });
}

Route.contextTypes = {
  onRoute: PropTypes.func
};
Route.displayName = 'FusionRoute';
export { Route };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL1JvdXRlLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiUHJvcFR5cGVzIiwiUm91dGUiLCJSZWFjdFJvdXRlclJvdXRlVW50eXBlZCIsIlJlYWN0Um91dGVyUm91dGUiLCJpc0VtcHR5Q2hpbGRyZW4iLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiY291bnQiLCJwcm9wcyIsImNvbnRleHQiLCJ0cmFja2luZ0lkIiwiY29tcG9uZW50IiwicmVuZGVyIiwicmVtYWluaW5nUHJvcHMiLCJyb3V0ZVByb3BzIiwibWF0Y2giLCJpc0V4YWN0Iiwib25Sb3V0ZSIsInBhZ2UiLCJwYXRoIiwidGl0bGUiLCJwYXJhbXMiLCJjcmVhdGVFbGVtZW50IiwiY29udGV4dFR5cGVzIiwiZnVuYyIsImRpc3BsYXlOYW1lIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLE9BQU8sS0FBS0EsS0FBWixNQUF1QixPQUF2QjtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxTQUFRQyxLQUFLLElBQUlDLHVCQUFqQixRQUErQyxrQkFBL0M7O0FBSUEsTUFBTUMsZ0JBQTJCLEdBQUdELHVCQUFwQzs7QUFFQSxNQUFNRSxlQUFlLEdBQUlDLFFBQUQsSUFDdEJOLEtBQUssQ0FBQ08sUUFBTixDQUFlQyxLQUFmLENBQXFCRixRQUFyQixNQUFtQyxDQURyQzs7QUFZQSxTQUFTSixLQUFULENBQWVPLEtBQWYsRUFBaUNDLE9BQWpDLEVBQXVEO0FBQ3JELFFBQU07QUFBQ0MsSUFBQUEsVUFBRDtBQUFhQyxJQUFBQSxTQUFiO0FBQXdCQyxJQUFBQSxNQUF4QjtBQUFnQ1AsSUFBQUEsUUFBaEM7QUFBMEMsT0FBR1E7QUFBN0MsTUFBK0RMLEtBQXJFO0FBRUEsc0JBQ0UsS0FBQyxnQkFBRCxPQUNNSyxjQUROO0FBRUU7QUFDQSxJQUFBLFFBQVEsRUFBR0MsVUFBRCxJQUFtQztBQUMzQyxZQUFNO0FBQUNDLFFBQUFBO0FBQUQsVUFBVUQsVUFBaEI7O0FBQ0EsVUFBSUMsS0FBSyxJQUFJQSxLQUFLLENBQUNDLE9BQW5CLEVBQTRCO0FBQzFCLFlBQUksT0FBT1AsT0FBTyxDQUFDUSxPQUFmLEtBQTJCLFVBQS9CLEVBQTJDO0FBQ3pDUixVQUFBQSxPQUFPLENBQUNRLE9BQVIsQ0FBZ0I7QUFDZEMsWUFBQUEsSUFBSSxFQUFFSCxLQUFLLENBQUNJLElBREU7QUFFZEMsWUFBQUEsS0FBSyxFQUFFVixVQUFVLElBQUlLLEtBQUssQ0FBQ0ksSUFGYjtBQUdkRSxZQUFBQSxNQUFNLEVBQUVOLEtBQUssQ0FBQ007QUFIQSxXQUFoQjtBQUtEO0FBQ0Y7O0FBRUQsVUFBSVYsU0FBSixFQUNFLE9BQU9JLEtBQUssZ0JBQUdoQixLQUFLLENBQUN1QixhQUFOLENBQW9CWCxTQUFwQixFQUErQkcsVUFBL0IsQ0FBSCxHQUFnRCxJQUE1RDtBQUVGLFVBQUlGLE1BQUosRUFBWSxPQUFPRyxLQUFLLEdBQUdILE1BQU0sQ0FBQ0UsVUFBRCxDQUFULEdBQXdCLElBQXBDO0FBRVosVUFBSSxPQUFPVCxRQUFQLEtBQW9CLFVBQXhCLEVBQW9DLE9BQU9BLFFBQVEsQ0FBQ1MsVUFBRCxDQUFmO0FBRXBDLFVBQUlULFFBQVEsSUFBSSxDQUFDRCxlQUFlLENBQUNDLFFBQUQsQ0FBaEMsRUFBNEMsT0FBT0EsUUFBUDtBQUU1QyxhQUFPLElBQVA7QUFDRDtBQXpCSCxJQURGO0FBNkJEOztBQUVESixLQUFLLENBQUNzQixZQUFOLEdBQXFCO0FBQ25CTixFQUFBQSxPQUFPLEVBQUVqQixTQUFTLENBQUN3QjtBQURBLENBQXJCO0FBSUF2QixLQUFLLENBQUN3QixXQUFOLEdBQW9CLGFBQXBCO0FBRUEsU0FBUXhCLEtBQVIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQ29weXJpZ2h0IChjKSAyMDE4IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqL1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHtSb3V0ZSBhcyBSZWFjdFJvdXRlclJvdXRlVW50eXBlZH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5cbmltcG9ydCB0eXBlIHtDb250ZXh0Um91dGVyVHlwZSwgUm91dGVUeXBlfSBmcm9tICcuLi90eXBlcy5qcyc7XG5cbmNvbnN0IFJlYWN0Um91dGVyUm91dGU6IFJvdXRlVHlwZSA9IFJlYWN0Um91dGVyUm91dGVVbnR5cGVkO1xuXG5jb25zdCBpc0VtcHR5Q2hpbGRyZW4gPSAoY2hpbGRyZW46IFJlYWN0Lk5vZGUpID0+XG4gIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcblxudHlwZSBQcm9wc1R5cGUgPSB7XG4gIHRyYWNraW5nSWQ/OiBhbnksXG4gIGNvbXBvbmVudD86IFJlYWN0LkNvbXBvbmVudFR5cGU8Kj4sXG4gIHJlbmRlcj86IChyb3V0ZVByb3BzOiBDb250ZXh0Um91dGVyVHlwZSkgPT4gUmVhY3QuTm9kZSxcbiAgY2hpbGRyZW4/OiAoKHJvdXRlUHJvcHM6IENvbnRleHRSb3V0ZXJUeXBlKSA9PiBSZWFjdC5Ob2RlKSB8IFJlYWN0Lk5vZGUsXG59O1xudHlwZSBDb250ZXh0VHlwZSA9IHtcbiAgb25Sb3V0ZTogYW55LFxufTtcbmZ1bmN0aW9uIFJvdXRlKHByb3BzOiBQcm9wc1R5cGUsIGNvbnRleHQ6IENvbnRleHRUeXBlKSB7XG4gIGNvbnN0IHt0cmFja2luZ0lkLCBjb21wb25lbnQsIHJlbmRlciwgY2hpbGRyZW4sIC4uLnJlbWFpbmluZ1Byb3BzfSA9IHByb3BzO1xuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0Um91dGVyUm91dGVcbiAgICAgIHsuLi5yZW1haW5pbmdQcm9wc31cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1jaGlsZHJlbi1wcm9wXG4gICAgICBjaGlsZHJlbj17KHJvdXRlUHJvcHM6IENvbnRleHRSb3V0ZXJUeXBlKSA9PiB7XG4gICAgICAgIGNvbnN0IHttYXRjaH0gPSByb3V0ZVByb3BzO1xuICAgICAgICBpZiAobWF0Y2ggJiYgbWF0Y2guaXNFeGFjdCkge1xuICAgICAgICAgIGlmICh0eXBlb2YgY29udGV4dC5vblJvdXRlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjb250ZXh0Lm9uUm91dGUoe1xuICAgICAgICAgICAgICBwYWdlOiBtYXRjaC5wYXRoLFxuICAgICAgICAgICAgICB0aXRsZTogdHJhY2tpbmdJZCB8fCBtYXRjaC5wYXRoLFxuICAgICAgICAgICAgICBwYXJhbXM6IG1hdGNoLnBhcmFtcyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb21wb25lbnQpXG4gICAgICAgICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHJvdXRlUHJvcHMpIDogbnVsbDtcblxuICAgICAgICBpZiAocmVuZGVyKSByZXR1cm4gbWF0Y2ggPyByZW5kZXIocm91dGVQcm9wcykgOiBudWxsO1xuXG4gICAgICAgIGlmICh0eXBlb2YgY2hpbGRyZW4gPT09ICdmdW5jdGlvbicpIHJldHVybiBjaGlsZHJlbihyb3V0ZVByb3BzKTtcblxuICAgICAgICBpZiAoY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikpIHJldHVybiBjaGlsZHJlbjtcblxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH19XG4gICAgLz5cbiAgKTtcbn1cblxuUm91dGUuY29udGV4dFR5cGVzID0ge1xuICBvblJvdXRlOiBQcm9wVHlwZXMuZnVuYyxcbn07XG5cblJvdXRlLmRpc3BsYXlOYW1lID0gJ0Z1c2lvblJvdXRlJztcblxuZXhwb3J0IHtSb3V0ZX07XG4iXX0=